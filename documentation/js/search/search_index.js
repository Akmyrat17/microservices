var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AbstractDocument.html",[0,0.013,1,1.813]],["body/classes/AbstractDocument.html",[0,0.017,1,2.904,2,1.966,3,0.332,4,0.332,5,0.246,6,3.573,7,0.524,8,1.702,9,4.282,10,0.656,11,0.027,12,4.475,13,1.82,14,4.244,15,4.244,16,0.688,17,4.244,18,0.416,19,3.922,20,3.179,21,1.82,22,4.244,23,2.801,24,2.318,25,0.332,26,4.244,27,0.022,28,0.022]],["title/classes/AbstractRepository.html",[0,0.013,29,1.984]],["body/classes/AbstractRepository.html",[0,0.008,1,1.136,2,0.964,3,0.163,4,0.163,5,0.121,7,0.257,8,1.031,9,1.535,10,0.592,11,0.028,12,1.751,16,0.857,18,0.308,23,1.373,24,1.136,25,0.163,27,0.013,28,0.013,29,1.925,30,1.751,31,3.27,32,4.431,33,1.237,34,3.345,35,0.831,36,1.825,37,2.599,38,2.925,39,2.375,40,2.905,41,3.27,42,1.19,43,2.08,44,3.739,45,3.489,46,3.219,47,1.144,48,0.781,49,1.144,50,1.535,51,2.905,52,2.887,53,3.27,54,2.08,55,2.905,56,2.375,57,1.237,58,2.125,59,2.08,60,1.772,61,2.375,62,3.899,63,2.08,64,2.905,65,1.535,66,3.27,67,3.27,68,3.27,69,2.08,70,2.08,71,2.08,72,0.282,73,2.08,74,0.892,75,2.221,76,2.08,77,1.907,78,2.08,79,1.33,80,2.618,81,2.08,82,2.08,83,2.08,84,5.605,85,2.08,86,2.354,87,3.937,88,3.937,89,2.08,90,2.08,91,2.71,92,2.08,93,2.08]],["title/controllers/AuthController.html",[94,1.423,95,2.19]],["body/controllers/AuthController.html",[0,0.012,3,0.231,4,0.231,5,0.171,7,0.364,10,0.514,11,0.028,13,1.788,16,0.676,18,0.473,25,0.231,27,0.017,28,0.017,33,0.761,35,1.076,36,1.716,47,1.076,48,0.735,49,1.076,57,1.076,60,1.09,72,0.4,79,0.818,80,1.611,94,1.265,95,2.752,96,1.265,97,2.482,98,2.175,99,2.482,100,4.071,101,3.51,102,2.175,103,2.532,104,4.46,105,2.948,106,2.948,107,2.948,108,2.948,109,2.948,110,2.175,111,4.168,112,2.175,113,2.948,114,1.366,115,1.946,116,2.428,117,2.175,118,1.611,119,2.948,120,4.168,121,1.946,122,2.948,123,2.175,124,3.076,125,2.948,126,2.948,127,2.948,128,1.611,129,2.948,130,2.948,131,2.948,132,1.366,133,2.948,134,2.948,135,2.175,136,2.948,137,2.948]],["title/modules/AuthModule.html",[138,0.989,139,1.813]],["body/modules/AuthModule.html",[0,0.011,3,0.212,4,0.212,5,0.157,11,0.028,18,0.479,25,0.212,27,0.016,28,0.016,72,0.368,95,3.046,96,1.684,116,2.81,117,2.001,132,1.256,138,1.376,139,3.527,140,1.163,141,1.256,142,1.482,143,1.482,144,1.256,145,2.317,146,1.361,147,2.283,148,2.283,149,2.283,150,3.058,151,2.593,152,3.347,153,3.347,154,3.347,155,2.145,156,1.482,157,1.482,158,2.712,159,1.971,160,2.001,161,2.344,162,1.003,163,2.712,164,1.79,165,1.163,166,2.592,167,2.712,168,2.712,169,2.712,170,2.712,171,2.001,172,2.001,173,2.001,174,2.001,175,2.712,176,3.405,177,2.712,178,2.283,179,2.283,180,2.712,181,2.712,182,1.79,183,2.712,184,2.283,185,2.712,186,2.712,187,2.712,188,1.482]],["title/injectables/AuthService.html",[116,1.666,189,0.585]],["body/injectables/AuthService.html",[0,0.011,3,0.218,4,0.218,5,0.162,7,0.344,10,0.578,11,0.028,16,0.759,18,0.425,25,0.313,27,0.016,28,0.016,33,1.033,35,1.033,36,1.396,42,1.48,47,1.209,48,0.825,49,1.209,57,1.033,72,0.378,74,1.716,75,2.17,77,1.592,100,3.369,102,2.952,103,2.159,104,4.597,115,1.837,116,2.009,123,2.054,132,1.854,161,2.617,162,1.029,164,1.837,189,0.705,190,1.108,191,2.054,192,4.001,193,2.054,194,4.899,195,2.784,196,2.784,197,3.369,198,2.784,199,2.344,200,1.398,201,2.801,202,2.952,203,0.772,204,2.344,205,3.943,206,3.369,207,2.344,208,2.344,209,2.344,210,3.369,211,2.344,212,3.369,213,3.369]],["title/controllers/BillingController.html",[94,1.423,214,2.19]],["body/controllers/BillingController.html",[0,0.014,3,0.27,4,0.27,5,0.2,7,0.425,10,0.425,11,0.028,13,1.989,16,0.752,18,0.44,25,0.27,27,0.019,28,0.019,33,0.888,35,1.197,36,1.564,47,0.888,48,0.606,49,0.888,57,1.197,72,0.467,79,0.955,94,1.989,96,1.476,112,2.539,114,1.594,118,1.88,128,1.88,135,2.539,165,1.476,203,1.287,214,3.062,215,2.898,216,4.727,217,5.246,218,3.441,219,3.441,220,3.871,221,5.614,222,3.441,223,3.441,224,3.422,225,2.866,226,2.898,227,4.638,228,3.441,229,4.638,230,3.441,231,3.441,232,3.441]],["title/modules/BillingModule.html",[138,0.989,233,2.19]],["body/modules/BillingModule.html",[0,0.013,3,0.263,4,0.263,5,0.195,11,0.028,18,0.469,25,0.263,27,0.019,28,0.019,72,0.456,96,1.956,132,1.555,138,1.544,139,3.274,140,1.439,141,1.555,142,1.833,143,1.833,144,1.555,145,2.6,146,1.685,151,2.777,155,2.491,156,1.833,157,1.833,159,2.289,160,2.476,162,1.241,165,1.439,166,3.01,171,2.476,172,2.476,173,2.476,174,2.476,176,3.365,214,3.419,225,3.274,226,2.826,233,4.221,234,2.826,235,2.826,236,3.356,237,3.356,238,3.356,239,3.356,240,3.356]],["title/injectables/BillingService.html",[189,0.585,225,1.813]],["body/injectables/BillingService.html",[0,0.015,3,0.287,4,0.287,5,0.213,7,0.453,8,1.55,10,0.453,11,0.027,16,0.878,18,0.287,25,0.287,27,0.02,28,0.02,33,1.398,34,3.802,35,1.249,36,1.614,47,0.947,48,0.646,49,0.947,57,1.249,72,0.498,74,2.323,77,1.926,79,1.018,189,0.853,190,1.46,203,1.343,216,4.849,224,3.571,225,2.644,241,3.088,242,4.84,243,4.84,244,3.668,245,3.668,246,2.194,247,2.194,248,4.84,249,3.668,250,3.668,251,3.668,252,3.668,253,1.842]],["title/classes/CreateOrderDto.html",[0,0.013,254,1.984]],["body/classes/CreateOrderDto.html",[0,0.02,2,1.782,3,0.301,4,0.301,5,0.223,7,0.475,8,1.599,10,0.684,11,0.027,13,2.378,16,0.899,18,0.301,25,0.301,27,0.02,28,0.02,48,0.977,203,1.628,254,2.986,255,4.939,256,3.239,257,4.667,258,4.667,259,3.239,260,3.847,261,4.993,262,3.847,263,4.204,264,5.543,265,3.847,266,4.204,267,3.847,268,4.204,269,2.839]],["title/classes/CreateUserDto.html",[0,0.013,270,1.984]],["body/classes/CreateUserDto.html",[0,0.021,2,1.898,3,0.321,4,0.321,5,0.238,7,0.506,8,1.664,10,0.642,11,0.027,13,2.23,16,0.843,18,0.321,25,0.321,27,0.021,28,0.021,203,1.666,259,3.449,266,4.377,268,4.377,269,3.023,270,3.109,271,4.808,272,3.449,273,3.769,274,3.769,275,5.71,276,4.097,277,4.097]],["title/modules/DatabaseModule.html",[138,0.989,150,1.813]],["body/modules/DatabaseModule.html",[0,0.017,3,0.334,4,0.334,5,0.247,11,0.028,18,0.456,21,1.828,25,0.334,27,0.022,28,0.022,72,0.579,138,1.589,140,1.828,150,2.912,159,2.14,161,2.823,162,1.576,182,2.814,188,2.329,278,4.263,279,3.145,280,4.263,281,4.263,282,4.263]],["title/guards/JwtAuthGuard.html",[118,1.813,283,2.448]],["body/guards/JwtAuthGuard.html",[0,0.01,3,0.192,4,0.192,5,0.142,7,0.302,10,0.594,11,0.028,16,0.781,18,0.377,25,0.192,27,0.015,28,0.015,33,0.631,35,0.939,42,1.346,47,1.243,48,0.848,49,1.243,57,1.122,58,2.402,72,0.332,74,2.397,75,1.133,77,1.448,79,1.206,86,2.176,103,1.73,114,1.133,118,1.988,188,1.336,189,0.641,199,2.059,220,3.981,284,2.446,285,4.334,286,1.804,287,3.639,288,4.815,289,3.639,290,2.446,291,4.054,292,2.446,293,3.639,294,3.639,295,5.028,296,2.446,297,3.639,298,2.446,299,3.639,300,4.347,301,3.639,302,2.446,303,2.446,304,1.804,305,1.804,306,2.059,307,3.639,308,2.446,309,1.804,310,2.446,311,2.446,312,2.446,313,4.054,314,2.446,315,3.639,316,3.639,317,2.446,318,2.446,319,2.446,320,2.446,321,4.054,322,3.064,323,2.059,324,3.064,325,2.059,326,2.446,327,2.446]],["title/injectables/JwtStrategy.html",[153,1.984,189,0.585]],["body/injectables/JwtStrategy.html",[0,0.012,3,0.235,4,0.235,5,0.174,7,0.37,9,2.21,10,0.52,11,0.028,16,0.683,18,0.466,23,1.977,24,1.636,25,0.235,27,0.017,28,0.017,33,0.773,35,1.088,36,1.454,42,1.559,47,1.088,48,0.743,49,1.088,57,0.773,60,1.108,72,0.407,74,1.285,77,1.677,79,1.169,80,1.636,86,1.791,117,2.21,153,2.52,161,2.681,162,1.108,184,2.522,189,0.743,190,1.192,193,2.21,201,3.165,202,2.21,304,3.11,328,2.522,329,2.116,330,3.549,331,4.106,332,2.754,333,2.995,334,2.995,335,2.995,336,2.522,337,1.977,338,2.995,339,2.522,340,2.21,341,2.522,342,2.522,343,2.522,344,2.995,345,2.995,346,2.522,347,2.995,348,2.995,349,2.21,350,2.995,351,2.995,352,2.21,353,2.522]],["title/classes/LocalAuthGuard.html",[0,0.013,121,2.19]],["body/classes/LocalAuthGuard.html",[0,0.019,2,2.192,3,0.371,4,0.371,5,0.275,11,0.027,18,0.371,25,0.371,27,0.023,28,0.023,121,3.751,286,3.491,329,2.853,337,3.123,354,3.984,355,5.682,356,4.732]],["title/injectables/LocalStrategy.html",[154,1.984,189,0.585]],["body/injectables/LocalStrategy.html",[0,0.014,3,0.272,4,0.272,5,0.201,7,0.428,10,0.575,11,0.028,16,0.756,18,0.441,25,0.272,27,0.019,28,0.019,33,0.895,35,1.203,36,1.57,42,1.282,47,1.203,48,0.821,49,1.203,57,0.895,60,1.282,72,0.471,79,0.962,128,1.894,154,2.787,189,0.821,190,1.38,203,1.679,273,3.077,274,3.717,329,2.34,330,3.924,331,3.924,332,2.803,336,2.919,337,2.288,339,2.919,340,2.558,342,2.919,343,2.919,357,2.919,358,3.467,359,3.467,360,4.661,361,3.467,362,2.558,363,3.467,364,3.467]],["title/classes/Order.html",[0,0.013,253,1.666]],["body/classes/Order.html",[0,0.015,1,2.651,2,1.706,3,0.288,4,0.288,5,0.214,7,0.454,8,1.554,10,0.67,11,0.028,13,2.328,16,0.88,18,0.38,19,4.631,20,2.902,21,1.579,25,0.38,27,0.02,28,0.02,48,0.956,75,1.706,132,1.706,165,1.579,203,1.6,253,2.436,257,4.569,258,4.569,263,4.085,329,1.849,365,2.717,366,3.682,367,3.682,368,3.682,369,3.1,370,3.1,371,2.717,372,3.682,373,2.431,374,3.1]],["title/controllers/OrdersController.html",[94,1.423,375,2.19]],["body/controllers/OrdersController.html",[0,0.013,3,0.261,4,0.261,5,0.193,7,0.411,10,0.411,11,0.028,13,1.946,16,0.736,18,0.434,25,0.261,27,0.019,28,0.019,33,0.86,35,1.171,36,1.783,38,3.657,47,0.86,48,0.587,49,0.86,57,1.171,60,1.678,72,0.453,79,1.259,80,1.821,94,1.429,96,1.429,98,2.459,110,3.348,112,2.459,118,1.821,128,1.821,135,2.459,165,1.429,254,3.576,375,2.996,376,2.806,377,3.332,378,4.345,379,3.332,380,5.796,381,3.332,382,3.332,383,3.332,384,3.821,385,2.819,386,2.806,387,2.806,388,2.806,389,3.332,390,3.332,391,3.332,392,3.332]],["title/modules/OrdersModule.html",[138,0.989,393,2.19]],["body/modules/OrdersModule.html",[0,0.011,3,0.223,4,0.223,5,0.165,11,0.028,18,0.485,20,1.705,21,1.223,25,0.223,27,0.017,28,0.017,48,0.717,72,0.387,96,1.746,132,1.321,138,1.415,139,3.11,140,1.223,141,1.321,142,1.557,143,1.557,144,1.321,145,2.383,146,1.431,150,3.11,151,2.536,155,2.223,156,1.557,157,1.557,159,2.043,160,2.103,162,1.054,165,1.223,166,2.686,171,2.103,172,2.103,173,2.103,174,2.103,176,2.103,178,2.4,179,2.4,253,1.431,279,2.103,373,2.686,375,3.133,385,3.11,386,2.4,393,4.241,394,2.4,395,2.4,396,2.851,397,3.11,398,2.851,399,2.851,400,2.4,401,2.4,402,2.686,403,2.4,404,2.4,405,2.851,406,2.851,407,2.4,408,2.851,409,2.851]],["title/injectables/OrdersRepository.html",[189,0.585,397,1.813]],["body/injectables/OrdersRepository.html",[0,0.01,3,0.197,4,0.197,5,0.146,7,0.311,8,1.19,10,0.603,11,0.027,16,0.915,18,0.408,21,1.08,24,1.375,25,0.197,27,0.015,28,0.015,29,3.535,31,3.262,33,1.141,34,3.223,35,0.96,36,1.792,37,2.454,38,2.918,39,2.743,40,2.743,41,3.262,42,1.375,44,3.603,45,3.902,47,1.26,48,0.86,49,1.26,50,1.857,51,2.743,52,2.668,53,2.743,55,1.857,56,2.743,57,1.345,58,1.662,60,1.806,61,1.857,62,3.603,64,2.743,65,1.857,66,2.743,67,2.743,68,2.743,72,0.342,77,1.48,165,1.08,189,0.655,190,1.002,246,1.505,247,1.505,253,1.264,329,1.867,397,2.031,401,2.119,410,2.119,411,2.517,412,2.517,413,3.718,414,4.591,415,2.119,416,2.119,417,2.119,418,2.119,419,2.119,420,3.718,421,2.517,422,3.13,423,2.119,424,2.517,425,2.517]],["title/injectables/OrdersService.html",[189,0.585,385,1.813]],["body/injectables/OrdersService.html",[0,0.011,3,0.219,4,0.219,5,0.162,7,0.345,10,0.495,11,0.028,16,0.761,18,0.443,25,0.219,27,0.016,28,0.016,33,1.035,35,1.035,36,1.685,42,1.483,47,1.035,48,0.707,49,1.035,57,1.035,60,1.032,72,0.379,74,1.72,75,1.858,79,0.775,80,3.088,86,1.67,91,3.376,114,1.294,188,1.525,189,0.707,190,1.111,203,1.302,253,2.013,254,3.066,291,4.317,309,2.06,313,4.572,349,2.06,352,2.06,378,3.376,385,2.19,387,2.351,388,2.351,397,3.088,400,2.351,402,1.843,403,2.351,426,2.351,427,5.128,428,2.792,429,4.691,430,2.792,431,4.009,432,2.792,433,2.351,434,2.792,435,4.009,436,2.792,437,2.792,438,2.792,439,2.792,440,2.792,441,4.009,442,2.792,443,2.792,444,2.792,445,2.792]],["title/modules/RmqModule.html",[138,0.989,151,1.537]],["body/modules/RmqModule.html",[0,0.012,3,0.238,4,0.238,5,0.176,10,0.374,11,0.028,16,0.492,18,0.417,25,0.238,27,0.017,28,0.017,35,0.783,47,0.783,48,0.938,49,0.783,52,1.657,57,0.783,72,0.412,79,0.842,114,1.405,138,1.586,140,1.301,141,1.405,142,1.657,143,1.657,144,1.405,145,2.465,146,2.672,151,2.821,155,2.323,156,1.657,157,1.657,159,1.523,161,2.466,162,1.122,182,2.002,188,1.657,200,1.523,203,0.842,446,2.554,447,2.554,448,2.554,449,3.493,450,2.238,451,3.58,452,3.58,453,3.033,454,3.513,455,3.033,456,4.134,457,2.554,458,3.58,459,3.138,460,2.554,461,2.238,462,2.238,463,2.554,464,2.238,465,2.554]],["title/interfaces/RmqModuleOptions.html",[200,1.666,454,2.19]],["body/interfaces/RmqModuleOptions.html",[0,0.014,3,0.271,4,0.271,5,0.2,7,0.426,8,1.489,10,0.426,11,0.028,18,0.44,25,0.271,27,0.019,28,0.019,48,1.065,52,1.887,72,0.469,79,0.958,114,1.6,138,1.567,145,1.734,146,2.334,151,2.154,159,1.734,161,2.605,162,1.277,182,2.28,188,1.887,200,1.734,203,1.458,449,2.871,450,2.549,451,2.908,452,2.908,454,3.469,456,3.915,457,2.908,458,3.915,459,3.431,460,2.908,461,2.549,462,2.549,463,2.908,464,2.549,465,2.908,466,2.549]],["title/injectables/RmqService.html",[189,0.585,449,1.813]],["body/injectables/RmqService.html",[0,0.014,3,0.27,4,0.27,5,0.2,7,0.425,10,0.572,11,0.028,16,0.752,18,0.411,25,0.27,27,0.019,28,0.019,33,0.888,35,1.197,42,1.715,47,1.197,48,0.817,49,1.197,52,1.88,57,0.888,72,0.467,74,1.476,79,0.955,114,1.594,132,1.594,161,2.797,162,1.273,189,0.817,190,1.369,193,2.539,203,1.456,246,2.058,247,2.058,371,3.422,449,2.534,459,3.422,461,2.539,462,2.539,464,3.422,467,2.898,468,4.638,469,3.441,470,4.638,471,5.861,472,3.441,473,5.246,474,3.441,475,3.441,476,2.898]],["title/interfaces/TokenPayload.html",[200,1.666,201,1.984]],["body/interfaces/TokenPayload.html",[0,0.013,3,0.252,4,0.252,5,0.187,7,0.397,8,1.419,10,0.397,11,0.028,18,0.449,25,0.347,27,0.018,28,0.018,33,1.144,36,0.96,42,1.19,72,0.437,74,1.901,75,2.348,77,1.764,102,2.375,103,1.764,104,4.029,115,2.125,116,1.616,123,2.375,132,2.053,161,2.348,162,1.19,164,2.125,189,0.781,191,2.375,194,4.267,197,2.71,200,1.616,201,3.265,202,4.225,203,1.406,204,2.71,205,4.267,206,3.731,207,2.71,208,2.71,209,2.71,210,3.731,211,2.71,212,3.731,213,3.731,466,2.375]],["title/classes/User.html",[0,0.013,103,1.32]],["body/classes/User.html",[0,0.016,1,2.757,2,1.812,3,0.306,4,0.306,5,0.227,7,0.483,8,1.616,10,0.623,11,0.028,13,2.164,16,0.818,18,0.395,19,4.509,20,3.018,21,1.677,25,0.395,27,0.021,28,0.021,75,1.812,103,2.008,165,1.677,203,1.638,273,3.688,274,3.688,329,1.963,369,3.293,370,3.293,371,2.885,477,2.885,478,3.911,479,3.911,480,2.581,481,3.293]],["title/controllers/UsersController.html",[94,1.423,482,2.19]],["body/controllers/UsersController.html",[0,0.015,3,0.297,4,0.297,5,0.22,7,0.467,10,0.467,11,0.028,13,1.624,16,0.614,18,0.431,25,0.297,27,0.02,28,0.02,33,0.977,35,1.275,36,1.64,47,0.977,48,0.667,49,0.977,57,0.977,60,1.4,72,0.514,79,1.05,94,1.624,96,1.624,98,2.793,110,4.058,128,2.068,270,3.487,332,2.548,384,3.187,433,4.16,482,3.261,483,3.187,484,3.785,485,4.16,486,3.785,487,3.785,488,3.187,489,3.187,490,3.187,491,3.785,492,3.785,493,3.785]],["title/modules/UsersModule.html",[138,0.989,152,1.984]],["body/modules/UsersModule.html",[0,0.013,3,0.265,4,0.265,5,0.196,11,0.028,18,0.47,20,2.021,21,1.45,25,0.265,27,0.019,28,0.019,48,0.596,72,0.459,96,1.965,103,1.345,138,1.549,140,1.45,141,1.566,142,1.847,143,1.847,144,1.566,145,2.61,146,2.61,152,3.788,155,2.503,156,1.847,157,1.847,159,1.697,279,2.494,332,3.017,407,2.846,480,3.025,482,3.431,490,2.846,494,2.846,495,2.846,496,2.846,497,3.281,498,3.38,499,3.38,500,2.494,501,2.846,502,3.38]],["title/injectables/UsersRepository.html",[189,0.585,497,1.813]],["body/injectables/UsersRepository.html",[0,0.01,3,0.198,4,0.198,5,0.146,7,0.311,8,1.193,10,0.603,11,0.027,16,0.915,18,0.409,21,1.083,24,1.379,25,0.198,27,0.015,28,0.015,29,3.538,31,3.267,33,1.143,34,3.227,35,0.962,36,1.794,37,2.459,38,2.923,39,2.749,40,2.749,41,3.267,42,1.378,44,3.608,45,3.825,47,1.262,48,0.862,49,1.262,50,1.862,51,2.749,52,2.671,53,2.749,55,1.862,56,2.749,57,1.346,58,1.666,60,1.808,61,1.862,62,3.608,64,2.749,65,1.862,66,2.749,67,2.749,68,2.749,72,0.343,77,1.483,103,1.004,165,1.083,189,0.656,190,1.004,246,1.509,247,1.509,329,1.87,414,4.595,415,2.125,416,2.125,417,2.125,418,2.125,419,2.125,422,3.137,423,2.125,497,2.035,500,1.862,503,2.125,504,2.524,505,2.524,506,3.725,507,3.725,508,2.524,509,2.524,510,2.524]],["title/injectables/UsersService.html",[189,0.585,332,1.537]],["body/injectables/UsersService.html",[0,0.009,3,0.184,4,0.184,5,0.137,7,0.291,10,0.625,11,0.028,16,0.821,18,0.397,25,0.184,27,0.014,28,0.014,33,0.608,35,0.913,36,1.814,42,0.871,47,1.307,48,0.892,49,1.307,57,1.219,60,1.571,72,0.32,74,1.823,75,1.969,77,1.408,79,1.179,80,2.906,86,2.115,101,2.978,103,2.311,128,1.286,189,0.623,190,0.937,203,1.476,270,3.3,273,2.805,274,3.119,304,1.737,332,1.639,346,3.578,349,1.737,352,1.737,353,1.982,485,2.978,488,1.982,489,1.982,497,2.906,500,1.737,501,1.982,511,1.982,512,3.537,513,3.537,514,2.354,515,2.354,516,3.537,517,2.354,518,3.537,519,4.249,520,2.354,521,2.354,522,3.537,523,2.354,524,3.537,525,2.354,526,2.354,527,2.978,528,2.354,529,2.354,530,2.354,531,2.354,532,3.537,533,2.354,534,2.354,535,2.354,536,2.354,537,3.537,538,2.354,539,2.354,540,2.354,541,2.354,542,2.354]],["title/coverage.html",[543,3.81]],["body/coverage.html",[0,0.023,1,1.316,5,0.14,6,2.028,10,0.297,11,0.028,27,0.015,28,0.015,29,1.44,30,2.028,77,0.958,94,2.049,95,1.59,97,2.028,103,0.958,116,1.209,118,1.966,121,1.59,124,1.777,144,1.996,153,1.44,154,1.44,189,1.03,191,2.655,200,1.806,201,1.44,214,1.59,215,2.028,225,1.316,241,2.028,253,1.209,254,1.44,255,2.028,256,2.028,270,1.44,271,2.028,272,2.028,283,1.777,285,2.028,286,3.178,305,1.777,328,2.028,332,1.116,354,2.028,357,2.028,365,2.655,373,1.59,375,1.59,376,2.028,385,1.316,397,1.316,402,1.59,410,2.028,426,2.028,449,1.316,450,1.777,454,1.59,467,2.028,477,2.655,480,1.59,482,1.59,483,2.028,497,1.316,503,2.028,511,2.028,543,2.028,544,2.408,545,2.408,546,2.408,547,6.713,548,5.716,549,5.114,550,4.778,551,3.029,552,3.029,553,5.365,554,6.039,555,2.028,556,2.408,557,2.028,558,4.307,559,4.307,560,2.408,561,2.028,562,2.028,563,2.028,564,2.408,565,2.028,566,2.408,567,2.408]],["title/dependencies.html",[141,1.849,568,2.334]],["body/dependencies.html",[0,0.019,11,0.028,21,1.586,23,2.44,24,2.02,27,0.02,28,0.02,45,2.44,72,0.502,114,1.713,115,2.44,141,1.713,162,1.367,164,2.44,166,2.44,269,2.728,309,2.728,337,2.44,340,4.012,341,3.113,362,2.728,527,3.113,569,5.777,570,4.865,571,3.697,572,3.697,573,3.697,574,3.697,575,3.697,576,3.697,577,3.697,578,3.697,579,3.697,580,3.697,581,3.697,582,3.697,583,3.697,584,3.697,585,3.697,586,3.697,587,3.697,588,3.697,589,3.697,590,3.697,591,3.697,592,3.697,593,3.697,594,3.697,595,3.697,596,3.697]],["title/miscellaneous/functions.html",[597,1.83,598,3.359]],["body/miscellaneous/functions.html",[7,0.593,11,0.023,27,0.023,28,0.023,144,3.128,557,4.044,561,4.044,563,4.044,597,3.171,598,4.044,599,6.129]],["title/index.html",[7,0.342,600,2.334,601,2.334]],["body/index.html",[5,0.308,11,0.02,16,0.686,27,0.017,28,0.017,37,2.795,224,2.224,306,2.538,362,2.224,404,2.538,476,2.538,600,2.538,601,2.538,602,3.014,603,3.014,604,6.387,605,3.014,606,3.014,607,3.014,608,4.234,609,3.014,610,4.894,611,4.234,612,4.234,613,3.014,614,3.014,615,4.894,616,4.234,617,4.234,618,5.591,619,5.307,620,3.014,621,3.014,622,4.234,623,5.797,624,3.014,625,3.014,626,3.014,627,2.224,628,3.014,629,3.014,630,3.014,631,4.234,632,3.014,633,2.538,634,3.014,635,3.014,636,3.014,637,3.014,638,4.894,639,4.894,640,5.307,641,3.014,642,3.014,643,4.234,644,4.234,645,4.894,646,3.014,647,3.014,648,3.014,649,3.014,650,3.014,651,3.014,652,3.014,653,3.014,654,3.014,655,3.014,656,3.014,657,3.014,658,3.014,659,4.894,660,3.014,661,4.894,662,3.014,663,4.234,664,3.014,665,3.014,666,3.014,667,3.014,668,3.014,669,3.014,670,3.014]],["title/modules.html",[140,1.941]],["body/modules.html",[11,0.022,27,0.022,28,0.022,139,2.979,140,1.897,150,2.416,151,2.049,152,2.644,233,2.919,393,2.919,671,6.456,672,6.456,673,6.456,674,6.542,675,4.422,676,4.422]],["title/overview.html",[677,3.81]],["body/overview.html",[2,1.301,11,0.027,27,0.017,28,0.017,96,1.205,116,2.363,138,0.837,139,3.595,140,1.205,141,1.301,142,1.534,143,1.534,144,1.301,145,1.41,146,1.41,147,2.365,148,2.365,149,2.365,150,2.809,151,2.947,152,3.569,153,2.815,154,2.815,155,2.2,156,1.534,157,1.534,190,1.118,225,2.572,233,3.939,234,2.365,235,2.365,283,2.072,332,2.703,385,2.572,393,4.162,394,2.365,395,2.365,397,2.572,446,2.365,447,2.365,448,2.365,449,3.187,466,2.072,494,2.365,495,2.365,496,2.365,497,2.572,677,2.365,678,2.808,679,2.808,680,2.808,681,2.808,682,2.808,683,2.808,684,2.808]],["title/properties.html",[8,1.277,568,2.334]],["body/properties.html",[8,1.595,11,0.027,27,0.024,28,0.024,633,4.193,685,4.98,686,4.98,687,4.98,688,4.98,689,4.98]],["title/miscellaneous/variables.html",[597,1.83,627,2.944]],["body/miscellaneous/variables.html",[7,0.444,10,0.59,11,0.028,27,0.02,28,0.02,60,1.331,79,1.326,99,3.03,124,3.526,203,1.326,220,3.526,246,3.657,247,3.657,295,4.023,305,3.526,321,4.023,322,3.03,323,3.03,324,3.03,325,3.03,365,2.655,373,3.154,374,3.03,402,3.154,477,2.655,480,3.154,481,3.03,551,3.03,552,4.517,555,4.023,562,3.03,565,3.03,597,2.375,627,2.655,690,3.598,691,3.598,692,4.779,693,3.598,694,3.598,695,3.598,696,3.598,697,3.598,698,3.598]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"classes/AbstractDocument.html":{},"classes/AbstractRepository.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/BillingController.html":{},"modules/BillingModule.html":{},"injectables/BillingService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"guards/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersRepository.html":{},"injectables/OrdersService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"injectables/RmqService.html":{},"interfaces/TokenPayload.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":547,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":685,"title":{},"body":{"properties.html":{}}}],["0.10.5",{"_index":581,"title":{},"body":{"dependencies.html":{}}}],["0.14.1",{"_index":585,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":595,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":584,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":591,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":554,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":550,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":548,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":549,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":564,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":560,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":559,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":683,"title":{},"body":{"overview.html":{}}}],["1.0.0",{"_index":592,"title":{},"body":{"dependencies.html":{}}}],["1.4.7",{"_index":588,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":531,"title":{},"body":{"injectables/UsersService.html":{}}}],["11.0.0",{"_index":572,"title":{},"body":{"dependencies.html":{}}}],["11.0.1",{"_index":569,"title":{},"body":{"dependencies.html":{}}}],["11.0.11",{"_index":574,"title":{},"body":{"dependencies.html":{}}}],["11.0.5",{"_index":575,"title":{},"body":{"dependencies.html":{}}}],["17.13.3",{"_index":589,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":684,"title":{},"body":{"overview.html":{}}}],["4",{"_index":680,"title":{},"body":{"overview.html":{}}}],["4.0.1",{"_index":570,"title":{},"body":{"dependencies.html":{}}}],["4.1.14",{"_index":579,"title":{},"body":{"dependencies.html":{}}}],["5.1.1",{"_index":582,"title":{},"body":{"dependencies.html":{}}}],["65876204",{"_index":310,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["7",{"_index":679,"title":{},"body":{"overview.html":{}}}],["7.8.1",{"_index":596,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":682,"title":{},"body":{"overview.html":{}}}],["8.12.1",{"_index":590,"title":{},"body":{"dependencies.html":{}}}],["8080",{"_index":666,"title":{},"body":{"index.html":{}}}],["9",{"_index":681,"title":{},"body":{"overview.html":{}}}],["_data",{"_index":697,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_id",{"_index":9,"title":{},"body":{"classes/AbstractDocument.html":{},"classes/AbstractRepository.html":{},"injectables/JwtStrategy.html":{}}}],["abstract",{"_index":32,"title":{},"body":{"classes/AbstractRepository.html":{}}}],["abstract.schema",{"_index":73,"title":{},"body":{"classes/AbstractRepository.html":{}}}],["abstractdocument",{"_index":1,"title":{"classes/AbstractDocument.html":{}},"body":{"classes/AbstractDocument.html":{},"classes/AbstractRepository.html":{},"classes/Order.html":{},"classes/User.html":{},"coverage.html":{}}}],["abstractrepository",{"_index":29,"title":{"classes/AbstractRepository.html":{}},"body":{"classes/AbstractRepository.html":{},"injectables/OrdersRepository.html":{},"injectables/UsersRepository.html":{},"coverage.html":{}}}],["abstractrepository:10",{"_index":508,"title":{},"body":{"injectables/UsersRepository.html":{}}}],["abstractrepository:21",{"_index":415,"title":{},"body":{"injectables/OrdersRepository.html":{},"injectables/UsersRepository.html":{}}}],["abstractrepository:34",{"_index":417,"title":{},"body":{"injectables/OrdersRepository.html":{},"injectables/UsersRepository.html":{}}}],["abstractrepository:43",{"_index":418,"title":{},"body":{"injectables/OrdersRepository.html":{},"injectables/UsersRepository.html":{}}}],["abstractrepository:55",{"_index":416,"title":{},"body":{"injectables/OrdersRepository.html":{},"injectables/UsersRepository.html":{}}}],["abstractrepository:62",{"_index":419,"title":{},"body":{"injectables/OrdersRepository.html":{},"injectables/UsersRepository.html":{}}}],["abstractrepository:9",{"_index":421,"title":{},"body":{"injectables/OrdersRepository.html":{}}}],["access",{"_index":663,"title":{},"body":{"index.html":{}}}],["accessing",{"_index":660,"title":{},"body":{"index.html":{}}}],["add",{"_index":635,"title":{},"body":{"index.html":{}}}],["adduser",{"_index":287,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["adduser(user",{"_index":294,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["already",{"_index":535,"title":{},"body":{"injectables/UsersService.html":{}}}],["amqp",{"_index":577,"title":{},"body":{"dependencies.html":{}}}],["amqplib",{"_index":580,"title":{},"body":{"dependencies.html":{}}}],["another_variable=another_value",{"_index":630,"title":{},"body":{"index.html":{}}}],["app/common",{"_index":165,"title":{},"body":{"modules/AuthModule.html":{},"controllers/BillingController.html":{},"modules/BillingModule.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersRepository.html":{},"classes/User.html":{},"injectables/UsersRepository.html":{}}}],["application",{"_index":661,"title":{},"body":{"index.html":{}}}],["apps/.../current",{"_index":692,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../main.ts",{"_index":599,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../order.schema.ts",{"_index":693,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../services.ts",{"_index":691,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../user.schema.ts",{"_index":694,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/auth/.env",{"_index":180,"title":{},"body":{"modules/AuthModule.html":{}}}],["apps/auth/src/auth.controller.ts",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["apps/auth/src/auth.controller.ts:16",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{}}}],["apps/auth/src/auth.controller.ts:26",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{}}}],["apps/auth/src/auth.module.ts",{"_index":158,"title":{},"body":{"modules/AuthModule.html":{}}}],["apps/auth/src/auth.service.ts",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/TokenPayload.html":{},"coverage.html":{}}}],["apps/auth/src/auth.service.ts:12",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/auth/src/auth.service.ts:18",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/auth/src/auth.service.ts:36",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/auth/src/current",{"_index":551,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/auth/src/guards/jwt",{"_index":556,"title":{},"body":{"coverage.html":{}}}],["apps/auth/src/guards/local",{"_index":354,"title":{},"body":{"classes/LocalAuthGuard.html":{},"coverage.html":{}}}],["apps/auth/src/main.ts",{"_index":557,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/auth/src/strategies/jwt.strategy.ts",{"_index":328,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["apps/auth/src/strategies/jwt.strategy.ts:10",{"_index":333,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/auth/src/strategies/jwt.strategy.ts:25",{"_index":335,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/auth/src/strategies/local.strategy.ts",{"_index":357,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["apps/auth/src/strategies/local.strategy.ts:12",{"_index":361,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["apps/auth/src/strategies/local.strategy.ts:7",{"_index":359,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["apps/auth/src/users/dto/create",{"_index":271,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["apps/auth/src/users/schemas/user.schema.ts",{"_index":477,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/auth/src/users/schemas/user.schema.ts:10",{"_index":479,"title":{},"body":{"classes/User.html":{}}}],["apps/auth/src/users/schemas/user.schema.ts:7",{"_index":478,"title":{},"body":{"classes/User.html":{}}}],["apps/auth/src/users/users.controller.ts",{"_index":483,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["apps/auth/src/users/users.controller.ts:10",{"_index":487,"title":{},"body":{"controllers/UsersController.html":{}}}],["apps/auth/src/users/users.module.ts",{"_index":498,"title":{},"body":{"modules/UsersModule.html":{}}}],["apps/auth/src/users/users.repository.ts",{"_index":503,"title":{},"body":{"injectables/UsersRepository.html":{},"coverage.html":{}}}],["apps/auth/src/users/users.repository.ts:10",{"_index":505,"title":{},"body":{"injectables/UsersRepository.html":{}}}],["apps/auth/src/users/users.service.ts",{"_index":511,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["apps/auth/src/users/users.service.ts:12",{"_index":515,"title":{},"body":{"injectables/UsersService.html":{}}}],["apps/auth/src/users/users.service.ts:15",{"_index":517,"title":{},"body":{"injectables/UsersService.html":{}}}],["apps/auth/src/users/users.service.ts:24",{"_index":523,"title":{},"body":{"injectables/UsersService.html":{}}}],["apps/auth/src/users/users.service.ts:37",{"_index":525,"title":{},"body":{"injectables/UsersService.html":{}}}],["apps/auth/src/users/users.service.ts:46",{"_index":520,"title":{},"body":{"injectables/UsersService.html":{}}}],["apps/billing/src/billing.controller.ts",{"_index":215,"title":{},"body":{"controllers/BillingController.html":{},"coverage.html":{}}}],["apps/billing/src/billing.controller.ts:11",{"_index":218,"title":{},"body":{"controllers/BillingController.html":{}}}],["apps/billing/src/billing.controller.ts:17",{"_index":223,"title":{},"body":{"controllers/BillingController.html":{}}}],["apps/billing/src/billing.module.ts",{"_index":237,"title":{},"body":{"modules/BillingModule.html":{}}}],["apps/billing/src/billing.service.ts",{"_index":241,"title":{},"body":{"injectables/BillingService.html":{},"coverage.html":{}}}],["apps/billing/src/billing.service.ts:11",{"_index":244,"title":{},"body":{"injectables/BillingService.html":{}}}],["apps/billing/src/billing.service.ts:5",{"_index":249,"title":{},"body":{"injectables/BillingService.html":{}}}],["apps/billing/src/billing.service.ts:7",{"_index":245,"title":{},"body":{"injectables/BillingService.html":{}}}],["apps/billing/src/main.ts",{"_index":561,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/orders/.env",{"_index":406,"title":{},"body":{"modules/OrdersModule.html":{}}}],["apps/orders/src/constants/services.ts",{"_index":562,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/orders/src/dtos/create",{"_index":255,"title":{},"body":{"classes/CreateOrderDto.html":{},"coverage.html":{}}}],["apps/orders/src/main.ts",{"_index":563,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/orders/src/orders.controller.ts",{"_index":376,"title":{},"body":{"controllers/OrdersController.html":{},"coverage.html":{}}}],["apps/orders/src/orders.controller.ts:12",{"_index":382,"title":{},"body":{"controllers/OrdersController.html":{}}}],["apps/orders/src/orders.controller.ts:20",{"_index":383,"title":{},"body":{"controllers/OrdersController.html":{}}}],["apps/orders/src/orders.module.ts",{"_index":398,"title":{},"body":{"modules/OrdersModule.html":{}}}],["apps/orders/src/orders.repository.ts",{"_index":410,"title":{},"body":{"injectables/OrdersRepository.html":{},"coverage.html":{}}}],["apps/orders/src/orders.repository.ts:9",{"_index":412,"title":{},"body":{"injectables/OrdersRepository.html":{}}}],["apps/orders/src/orders.service.ts",{"_index":426,"title":{},"body":{"injectables/OrdersService.html":{},"coverage.html":{}}}],["apps/orders/src/orders.service.ts:15",{"_index":432,"title":{},"body":{"injectables/OrdersService.html":{}}}],["apps/orders/src/orders.service.ts:34",{"_index":434,"title":{},"body":{"injectables/OrdersService.html":{}}}],["apps/orders/src/orders.service.ts:9",{"_index":430,"title":{},"body":{"injectables/OrdersService.html":{}}}],["apps/orders/src/schemas/order.schema.ts",{"_index":365,"title":{},"body":{"classes/Order.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/orders/src/schemas/order.schema.ts:10",{"_index":368,"title":{},"body":{"classes/Order.html":{}}}],["apps/orders/src/schemas/order.schema.ts:13",{"_index":367,"title":{},"body":{"classes/Order.html":{}}}],["apps/orders/src/schemas/order.schema.ts:7",{"_index":366,"title":{},"body":{"classes/Order.html":{}}}],["async",{"_index":36,"title":{},"body":{"classes/AbstractRepository.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BillingController.html":{},"injectables/BillingService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/OrdersController.html":{},"injectables/OrdersRepository.html":{},"injectables/OrdersService.html":{},"interfaces/TokenPayload.html":{},"controllers/UsersController.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{}}}],["auth",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{},"miscellaneous/variables.html":{}}}],["auth.controller",{"_index":167,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.guard.ts",{"_index":286,"title":{},"body":{"guards/JwtAuthGuard.html":{},"classes/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:12",{"_index":298,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["auth.guard.ts:27",{"_index":296,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["auth.guard.ts:35",{"_index":302,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["auth.guard.ts:7",{"_index":292,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["auth.service",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["auth/users",{"_index":484,"title":{},"body":{"controllers/UsersController.html":{}}}],["auth_service",{"_index":305,"title":{},"body":{"guards/JwtAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authclient",{"_index":293,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["authcontroller",{"_index":95,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticated",{"_index":316,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["authentication",{"_index":313,"title":{},"body":{"guards/JwtAuthGuard.html":{},"injectables/OrdersService.html":{}}}],["authguard",{"_index":356,"title":{},"body":{"classes/LocalAuthGuard.html":{}}}],["authguard('local",{"_index":355,"title":{},"body":{"classes/LocalAuthGuard.html":{}}}],["authmodule",{"_index":139,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/BillingModule.html":{},"modules/OrdersModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":689,"title":{},"body":{"properties.html":{}}}],["authservice",{"_index":116,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/TokenPayload.html":{},"coverage.html":{},"overview.html":{}}}],["available",{"_index":676,"title":{},"body":{"modules.html":{}}}],["await",{"_index":80,"title":{},"body":{"classes/AbstractRepository.html":{},"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"injectables/UsersService.html":{}}}],["bcrypt",{"_index":527,"title":{},"body":{"injectables/UsersService.html":{},"dependencies.html":{}}}],["bcrypt.compare(password",{"_index":538,"title":{},"body":{"injectables/UsersService.html":{}}}],["bcrypt.hash(request.password",{"_index":530,"title":{},"body":{"injectables/UsersService.html":{}}}],["bill",{"_index":242,"title":{},"body":{"injectables/BillingService.html":{}}}],["bill(data",{"_index":243,"title":{},"body":{"injectables/BillingService.html":{}}}],["billing",{"_index":695,"title":{},"body":{"miscellaneous/variables.html":{}}}],["billing.controller",{"_index":238,"title":{},"body":{"modules/BillingModule.html":{}}}],["billing.service",{"_index":226,"title":{},"body":{"controllers/BillingController.html":{},"modules/BillingModule.html":{}}}],["billing_service",{"_index":402,"title":{},"body":{"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["billingclient",{"_index":429,"title":{},"body":{"injectables/OrdersService.html":{}}}],["billingcontroller",{"_index":214,"title":{"controllers/BillingController.html":{}},"body":{"controllers/BillingController.html":{},"modules/BillingModule.html":{},"coverage.html":{}}}],["billingmodule",{"_index":233,"title":{"modules/BillingModule.html":{}},"body":{"modules/BillingModule.html":{},"modules.html":{},"overview.html":{}}}],["billingservice",{"_index":225,"title":{"injectables/BillingService.html":{}},"body":{"controllers/BillingController.html":{},"modules/BillingModule.html":{},"injectables/BillingService.html":{},"coverage.html":{},"overview.html":{}}}],["body",{"_index":384,"title":{},"body":{"controllers/OrdersController.html":{},"controllers/UsersController.html":{}}}],["boolean",{"_index":299,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["bootstrap",{"_index":144,"title":{},"body":{"modules/AuthModule.html":{},"modules/BillingModule.html":{},"modules/OrdersModule.html":{},"modules/RmqModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":674,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":671,"title":{},"body":{"modules.html":{}}}],["build",{"_index":638,"title":{},"body":{"index.html":{}}}],["builds",{"_index":648,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":288,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["canactivate(context",{"_index":297,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["catch",{"_index":352,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/OrdersService.html":{},"injectables/UsersService.html":{}}}],["catcherror",{"_index":307,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["changes",{"_index":652,"title":{},"body":{"index.html":{}}}],["class",{"_index":0,"title":{"classes/AbstractDocument.html":{},"classes/AbstractRepository.html":{},"classes/CreateOrderDto.html":{},"classes/CreateUserDto.html":{},"classes/LocalAuthGuard.html":{},"classes/Order.html":{},"classes/User.html":{}},"body":{"classes/AbstractDocument.html":{},"classes/AbstractRepository.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/BillingController.html":{},"modules/BillingModule.html":{},"injectables/BillingService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"guards/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersRepository.html":{},"injectables/OrdersService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"injectables/RmqService.html":{},"interfaces/TokenPayload.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AbstractDocument.html":{},"classes/AbstractRepository.html":{},"classes/CreateOrderDto.html":{},"classes/CreateUserDto.html":{},"classes/LocalAuthGuard.html":{},"classes/Order.html":{},"classes/User.html":{},"overview.html":{}}}],["clientproxy",{"_index":291,"title":{},"body":{"guards/JwtAuthGuard.html":{},"injectables/OrdersService.html":{}}}],["clientsmodule",{"_index":458,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["clientsmodule.registerasync",{"_index":460,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["cluster_authmodule",{"_index":147,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":678,"title":{},"body":{"overview.html":{}}}],["cluster_authmodule_imports",{"_index":148,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":149,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_billingmodule",{"_index":234,"title":{},"body":{"modules/BillingModule.html":{},"overview.html":{}}}],["cluster_billingmodule_imports",{"_index":236,"title":{},"body":{"modules/BillingModule.html":{}}}],["cluster_billingmodule_providers",{"_index":235,"title":{},"body":{"modules/BillingModule.html":{},"overview.html":{}}}],["cluster_ordersmodule",{"_index":394,"title":{},"body":{"modules/OrdersModule.html":{},"overview.html":{}}}],["cluster_ordersmodule_imports",{"_index":396,"title":{},"body":{"modules/OrdersModule.html":{}}}],["cluster_ordersmodule_providers",{"_index":395,"title":{},"body":{"modules/OrdersModule.html":{},"overview.html":{}}}],["cluster_rmqmodule",{"_index":446,"title":{},"body":{"modules/RmqModule.html":{},"overview.html":{}}}],["cluster_rmqmodule_exports",{"_index":447,"title":{},"body":{"modules/RmqModule.html":{},"overview.html":{}}}],["cluster_rmqmodule_providers",{"_index":448,"title":{},"body":{"modules/RmqModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":494,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":495,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":496,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["command",{"_index":644,"title":{},"body":{"index.html":{}}}],["commit",{"_index":632,"title":{},"body":{"index.html":{}}}],["compose",{"_index":615,"title":{},"body":{"index.html":{}}}],["compose.yml",{"_index":659,"title":{},"body":{"index.html":{}}}],["configmodule",{"_index":160,"title":{},"body":{"modules/AuthModule.html":{},"modules/BillingModule.html":{},"modules/OrdersModule.html":{}}}],["configmodule.forroot",{"_index":171,"title":{},"body":{"modules/AuthModule.html":{},"modules/BillingModule.html":{},"modules/OrdersModule.html":{}}}],["configservice",{"_index":161,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"injectables/JwtStrategy.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"injectables/RmqService.html":{},"interfaces/TokenPayload.html":{}}}],["configservice.get('jwt_expiration')}s",{"_index":187,"title":{},"body":{"modules/AuthModule.html":{}}}],["configservice.get('jwt_secret",{"_index":184,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["configservice.get('mongodb_uri",{"_index":282,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["configservice.get('rabbit_mq_uri",{"_index":463,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["configservice.get(`rabbit_mq_${name}_queue",{"_index":465,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["configuration",{"_index":617,"title":{},"body":{"index.html":{}}}],["connection",{"_index":45,"title":{},"body":{"classes/AbstractRepository.html":{},"injectables/OrdersRepository.html":{},"injectables/UsersRepository.html":{},"dependencies.html":{}}}],["const",{"_index":75,"title":{},"body":{"classes/AbstractRepository.html":{},"injectables/AuthService.html":{},"guards/JwtAuthGuard.html":{},"classes/Order.html":{},"injectables/OrdersService.html":{},"interfaces/TokenPayload.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["constants/services",{"_index":403,"title":{},"body":{"modules/OrdersModule.html":{},"injectables/OrdersService.html":{}}}],["constructor",{"_index":42,"title":{},"body":{"classes/AbstractRepository.html":{},"injectables/AuthService.html":{},"guards/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/OrdersRepository.html":{},"injectables/OrdersService.html":{},"injectables/RmqService.html":{},"interfaces/TokenPayload.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{}}}],["constructor(authclient",{"_index":290,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["constructor(configservice",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/RmqService.html":{}}}],["constructor(model",{"_index":43,"title":{},"body":{"classes/AbstractRepository.html":{}}}],["constructor(ordermodel",{"_index":411,"title":{},"body":{"injectables/OrdersRepository.html":{}}}],["constructor(ordersrepository",{"_index":428,"title":{},"body":{"injectables/OrdersService.html":{}}}],["constructor(private",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BillingController.html":{},"injectables/LocalStrategy.html":{},"controllers/OrdersController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["constructor(usermodel",{"_index":504,"title":{},"body":{"injectables/UsersRepository.html":{}}}],["constructor(usersrepository",{"_index":514,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":358,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["containers",{"_index":640,"title":{},"body":{"index.html":{}}}],["contents",{"_index":628,"title":{},"body":{"index.html":{}}}],["context",{"_index":220,"title":{},"body":{"controllers/BillingController.html":{},"guards/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["context.gettype",{"_index":321,"title":{},"body":{"guards/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["context.switchtohttp().getrequest().cookies?.authentication",{"_index":327,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["context.switchtohttp().getrequest().user",{"_index":325,"title":{},"body":{"guards/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["context.switchtorpc().getdata().authentication",{"_index":326,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["context.switchtorpc().getdata().user",{"_index":323,"title":{},"body":{"guards/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["control",{"_index":634,"title":{},"body":{"index.html":{}}}],["controller",{"_index":94,"title":{"controllers/AuthController.html":{},"controllers/BillingController.html":{},"controllers/OrdersController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AuthController.html":{},"controllers/BillingController.html":{},"controllers/OrdersController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('auth/users",{"_index":491,"title":{},"body":{"controllers/UsersController.html":{}}}],["controller('orders",{"_index":389,"title":{},"body":{"controllers/OrdersController.html":{}}}],["controllers",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/BillingController.html":{},"modules/BillingModule.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["cookie",{"_index":586,"title":{},"body":{"dependencies.html":{}}}],["copying",{"_index":621,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":543,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cp",{"_index":624,"title":{},"body":{"index.html":{}}}],["create",{"_index":37,"title":{},"body":{"classes/AbstractRepository.html":{},"injectables/OrdersRepository.html":{},"injectables/UsersRepository.html":{},"index.html":{}}}],["create(document",{"_index":50,"title":{},"body":{"classes/AbstractRepository.html":{},"injectables/OrdersRepository.html":{},"injectables/UsersRepository.html":{}}}],["createddocument",{"_index":76,"title":{},"body":{"classes/AbstractRepository.html":{}}}],["createddocument.save(options",{"_index":81,"title":{},"body":{"classes/AbstractRepository.html":{}}}],["createorder",{"_index":378,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["createorder(createorderdto",{"_index":379,"title":{},"body":{"controllers/OrdersController.html":{}}}],["createorder(dto",{"_index":431,"title":{},"body":{"injectables/OrdersService.html":{}}}],["createorderdto",{"_index":254,"title":{"classes/CreateOrderDto.html":{}},"body":{"classes/CreateOrderDto.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"coverage.html":{}}}],["createparamdecorator",{"_index":696,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createuser",{"_index":485,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["createuser(@body",{"_index":492,"title":{},"body":{"controllers/UsersController.html":{}}}],["createuser(dto",{"_index":486,"title":{},"body":{"controllers/UsersController.html":{}}}],["createuser(request",{"_index":516,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto",{"_index":270,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["ctx",{"_index":227,"title":{},"body":{"controllers/BillingController.html":{}}}],["current",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{}}}],["currentuser",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["data",{"_index":224,"title":{},"body":{"controllers/BillingController.html":{},"injectables/BillingService.html":{},"index.html":{}}}],["databasemodule",{"_index":150,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/OrdersModule.html":{},"modules.html":{},"overview.html":{}}}],["date",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/TokenPayload.html":{}}}],["declarations",{"_index":143,"title":{},"body":{"modules/AuthModule.html":{},"modules/BillingModule.html":{},"modules/OrdersModule.html":{},"modules/RmqModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":13,"title":{},"body":{"classes/AbstractDocument.html":{},"controllers/AuthController.html":{},"controllers/BillingController.html":{},"classes/CreateOrderDto.html":{},"classes/CreateUserDto.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"classes/User.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":246,"title":{},"body":{"injectables/BillingService.html":{},"injectables/OrdersRepository.html":{},"injectables/RmqService.html":{},"injectables/UsersRepository.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":16,"title":{},"body":{"classes/AbstractDocument.html":{},"classes/AbstractRepository.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BillingController.html":{},"injectables/BillingService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateUserDto.html":{},"guards/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"injectables/OrdersRepository.html":{},"injectables/OrdersService.html":{},"modules/RmqModule.html":{},"injectables/RmqService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["dependencies",{"_index":141,"title":{"dependencies.html":{}},"body":{"modules/AuthModule.html":{},"modules/BillingModule.html":{},"modules/OrdersModule.html":{},"modules/RmqModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":686,"title":{},"body":{"properties.html":{}}}],["directory",{"_index":642,"title":{},"body":{"index.html":{}}}],["doc",{"_index":84,"title":{},"body":{"classes/AbstractRepository.html":{}}}],["docker",{"_index":604,"title":{},"body":{"index.html":{}}}],["dockerfile",{"_index":653,"title":{},"body":{"index.html":{}}}],["document",{"_index":55,"title":{},"body":{"classes/AbstractRepository.html":{},"injectables/OrdersRepository.html":{},"injectables/UsersRepository.html":{}}}],["documentation",{"_index":544,"title":{},"body":{"coverage.html":{}}}],["don't",{"_index":650,"title":{},"body":{"index.html":{}}}],["down",{"_index":670,"title":{},"body":{"index.html":{}}}],["dto",{"_index":433,"title":{},"body":{"injectables/OrdersService.html":{},"controllers/UsersController.html":{}}}],["dto/create",{"_index":488,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dtos/create",{"_index":387,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["dynamicmodule",{"_index":456,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["email",{"_index":273,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/LocalStrategy.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["env",{"_index":618,"title":{},"body":{"index.html":{}}}],["env.example",{"_index":622,"title":{},"body":{"index.html":{}}}],["envfilepath",{"_index":179,"title":{},"body":{"modules/AuthModule.html":{},"modules/OrdersModule.html":{}}}],["environment",{"_index":616,"title":{},"body":{"index.html":{}}}],["err",{"_index":353,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["error",{"_index":441,"title":{},"body":{"injectables/OrdersService.html":{}}}],["eventpattern",{"_index":228,"title":{},"body":{"controllers/BillingController.html":{}}}],["eventpattern('order_created",{"_index":231,"title":{},"body":{"controllers/BillingController.html":{}}}],["eventpattern('order_created')@useguards(jwtauthguard",{"_index":222,"title":{},"body":{"controllers/BillingController.html":{}}}],["example",{"_index":623,"title":{},"body":{"index.html":{}}}],["executioncontext",{"_index":295,"title":{},"body":{"guards/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["exist",{"_index":651,"title":{},"body":{"index.html":{}}}],["exists",{"_index":536,"title":{},"body":{"injectables/UsersService.html":{}}}],["expires",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/TokenPayload.html":{}}}],["expires.getseconds",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/TokenPayload.html":{}}}],["expires.setseconds",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/TokenPayload.html":{}}}],["expiresin",{"_index":186,"title":{},"body":{"modules/AuthModule.html":{}}}],["explanation",{"_index":646,"title":{},"body":{"index.html":{}}}],["export",{"_index":25,"title":{},"body":{"classes/AbstractDocument.html":{},"classes/AbstractRepository.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/BillingController.html":{},"modules/BillingModule.html":{},"injectables/BillingService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"guards/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersRepository.html":{},"injectables/OrdersService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"injectables/RmqService.html":{},"interfaces/TokenPayload.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":146,"title":{},"body":{"modules/AuthModule.html":{},"modules/BillingModule.html":{},"modules/OrdersModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/TokenPayload.html":{},"dependencies.html":{}}}],["extends",{"_index":329,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Order.html":{},"injectables/OrdersRepository.html":{},"classes/User.html":{},"injectables/UsersRepository.html":{}}}],["extractjwt",{"_index":338,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromextractors",{"_index":345,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":371,"title":{},"body":{"classes/Order.html":{},"injectables/RmqService.html":{},"classes/User.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AbstractDocument.html":{},"classes/AbstractRepository.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/BillingController.html":{},"modules/BillingModule.html":{},"injectables/BillingService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"guards/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersRepository.html":{},"injectables/OrdersService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"injectables/RmqService.html":{},"interfaces/TokenPayload.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{},"coverage.html":{},"index.html":{}}}],["files",{"_index":619,"title":{},"body":{"index.html":{}}}],["filterquery",{"_index":62,"title":{},"body":{"classes/AbstractRepository.html":{},"injectables/OrdersRepository.html":{},"injectables/UsersRepository.html":{}}}],["finally",{"_index":443,"title":{},"body":{"injectables/OrdersService.html":{}}}],["find",{"_index":38,"title":{},"body":{"classes/AbstractRepository.html":{},"controllers/OrdersController.html":{},"injectables/OrdersRepository.html":{},"injectables/UsersRepository.html":{}}}],["findone",{"_index":39,"title":{},"body":{"classes/AbstractRepository.html":{},"injectables/OrdersRepository.html":{},"injectables/UsersRepository.html":{}}}],["findone(query",{"_index":61,"title":{},"body":{"classes/AbstractRepository.html":{},"injectables/OrdersRepository.html":{},"injectables/UsersRepository.html":{}}}],["findoneandupdate",{"_index":40,"title":{},"body":{"classes/AbstractRepository.html":{},"injectables/OrdersRepository.html":{},"injectables/UsersRepository.html":{}}}],["findoneandupdate(query",{"_index":65,"title":{},"body":{"classes/AbstractRepository.html":{},"injectables/OrdersRepository.html":{},"injectables/UsersRepository.html":{}}}],["flag",{"_index":657,"title":{},"body":{"index.html":{}}}],["flags",{"_index":647,"title":{},"body":{"index.html":{}}}],["following",{"_index":643,"title":{},"body":{"index.html":{}}}],["forbiddenexception",{"_index":303,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["found",{"_index":88,"title":{},"body":{"classes/AbstractRepository.html":{}}}],["function",{"_index":558,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":598,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["getauthentication",{"_index":289,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["getauthentication(context",{"_index":301,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["getcurrentuserbycontext",{"_index":555,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getcurrentuserbycontext(context",{"_index":698,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gethello",{"_index":216,"title":{},"body":{"controllers/BillingController.html":{},"injectables/BillingService.html":{}}}],["getoptions",{"_index":468,"title":{},"body":{"injectables/RmqService.html":{}}}],["getoptions(queue",{"_index":470,"title":{},"body":{"injectables/RmqService.html":{}}}],["getorders",{"_index":427,"title":{},"body":{"injectables/OrdersService.html":{}}}],["getting",{"_index":600,"title":{"index.html":{}},"body":{"index.html":{}}}],["getuser",{"_index":512,"title":{},"body":{"injectables/UsersService.html":{}}}],["getuser(getuserargs",{"_index":518,"title":{},"body":{"injectables/UsersService.html":{}}}],["getuserargs",{"_index":521,"title":{},"body":{"injectables/UsersService.html":{}}}],["gitignore",{"_index":636,"title":{},"body":{"index.html":{}}}],["graph",{"_index":675,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":283,"title":{"guards/JwtAuthGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":284,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["guards/jwt",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{}}}],["guards/local",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{}}}],["guide",{"_index":607,"title":{},"body":{"index.html":{}}}],["handleordercreated",{"_index":217,"title":{},"body":{"controllers/BillingController.html":{}}}],["handleordercreated(data",{"_index":219,"title":{},"body":{"controllers/BillingController.html":{}}}],["hello",{"_index":250,"title":{},"body":{"injectables/BillingService.html":{}}}],["http",{"_index":324,"title":{},"body":{"guards/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["http://localhost:3002",{"_index":667,"title":{},"body":{"index.html":{}}}],["httponly",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/TokenPayload.html":{}}}],["identifier",{"_index":545,"title":{},"body":{"coverage.html":{}}}],["images",{"_index":649,"title":{},"body":{"index.html":{}}}],["implements",{"_index":311,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["import",{"_index":18,"title":{},"body":{"classes/AbstractDocument.html":{},"classes/AbstractRepository.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/BillingController.html":{},"modules/BillingModule.html":{},"injectables/BillingService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"guards/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersRepository.html":{},"injectables/OrdersService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"injectables/RmqService.html":{},"interfaces/TokenPayload.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{}}}],["important",{"_index":631,"title":{},"body":{"index.html":{}}}],["imports",{"_index":159,"title":{},"body":{"modules/AuthModule.html":{},"modules/BillingModule.html":{},"modules/DatabaseModule.html":{},"modules/OrdersModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"classes/AbstractDocument.html":{},"classes/AbstractRepository.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BillingController.html":{},"injectables/BillingService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateUserDto.html":{},"guards/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"injectables/OrdersRepository.html":{},"injectables/OrdersService.html":{},"interfaces/RmqModuleOptions.html":{},"injectables/RmqService.html":{},"interfaces/TokenPayload.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AbstractDocument.html":{},"classes/AbstractRepository.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/BillingController.html":{},"modules/BillingModule.html":{},"injectables/BillingService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"guards/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersRepository.html":{},"injectables/OrdersService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"injectables/RmqService.html":{},"interfaces/TokenPayload.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{}}}],["inherited",{"_index":414,"title":{},"body":{"injectables/OrdersRepository.html":{},"injectables/UsersRepository.html":{}}}],["inject",{"_index":188,"title":{},"body":{"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"guards/JwtAuthGuard.html":{},"injectables/OrdersService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["inject(auth_service",{"_index":312,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["inject(billing_service",{"_index":436,"title":{},"body":{"injectables/OrdersService.html":{}}}],["injectable",{"_index":189,"title":{"injectables/AuthService.html":{},"injectables/BillingService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/OrdersRepository.html":{},"injectables/OrdersService.html":{},"injectables/RmqService.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/BillingService.html":{},"guards/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/OrdersRepository.html":{},"injectables/OrdersService.html":{},"injectables/RmqService.html":{},"interfaces/TokenPayload.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BillingService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/OrdersRepository.html":{},"injectables/OrdersService.html":{},"injectables/RmqService.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectconnection",{"_index":422,"title":{},"body":{"injectables/OrdersRepository.html":{},"injectables/UsersRepository.html":{}}}],["injectmodel",{"_index":423,"title":{},"body":{"injectables/OrdersRepository.html":{},"injectables/UsersRepository.html":{}}}],["injectmodel(order.name",{"_index":424,"title":{},"body":{"injectables/OrdersRepository.html":{}}}],["injectmodel(user.name",{"_index":509,"title":{},"body":{"injectables/UsersRepository.html":{}}}],["instructions",{"_index":606,"title":{},"body":{"index.html":{}}}],["interface",{"_index":200,"title":{"interfaces/RmqModuleOptions.html":{},"interfaces/TokenPayload.html":{}},"body":{"injectables/AuthService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"interfaces/TokenPayload.html":{},"coverage.html":{}}}],["interfaces",{"_index":466,"title":{},"body":{"interfaces/RmqModuleOptions.html":{},"interfaces/TokenPayload.html":{},"overview.html":{}}}],["isemail",{"_index":275,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isglobal",{"_index":172,"title":{},"body":{"modules/AuthModule.html":{},"modules/BillingModule.html":{},"modules/OrdersModule.html":{}}}],["isnotempty",{"_index":266,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateUserDto.html":{}}}],["isphonenumber",{"_index":267,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["isphonenumber('tm",{"_index":261,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["ispositive",{"_index":264,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["isstring",{"_index":268,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateUserDto.html":{}}}],["isstring()@isnotempty",{"_index":259,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateUserDto.html":{}}}],["joi",{"_index":166,"title":{},"body":{"modules/AuthModule.html":{},"modules/BillingModule.html":{},"modules/OrdersModule.html":{},"dependencies.html":{}}}],["joi.number().required",{"_index":405,"title":{},"body":{"modules/OrdersModule.html":{}}}],["joi.object",{"_index":174,"title":{},"body":{"modules/AuthModule.html":{},"modules/BillingModule.html":{},"modules/OrdersModule.html":{}}}],["joi.string().required",{"_index":176,"title":{},"body":{"modules/AuthModule.html":{},"modules/BillingModule.html":{},"modules/OrdersModule.html":{}}}],["jwt",{"_index":341,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt_expiration",{"_index":177,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwt_secret",{"_index":175,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtauthguard",{"_index":118,"title":{"guards/JwtAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"controllers/BillingController.html":{},"guards/JwtAuthGuard.html":{},"controllers/OrdersController.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":344,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":163,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":181,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/TokenPayload.html":{}}}],["jwtstrategy",{"_index":153,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["lastvaluefrom",{"_index":435,"title":{},"body":{"injectables/OrdersService.html":{}}}],["legend",{"_index":142,"title":{},"body":{"modules/AuthModule.html":{},"modules/BillingModule.html":{},"modules/OrdersModule.html":{},"modules/RmqModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["libs/.../services.ts",{"_index":690,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/common/src/auth/jwt",{"_index":285,"title":{},"body":{"guards/JwtAuthGuard.html":{},"coverage.html":{}}}],["libs/common/src/auth/services.ts",{"_index":565,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/database/abstract.repository.ts",{"_index":30,"title":{},"body":{"classes/AbstractRepository.html":{},"coverage.html":{}}}],["libs/common/src/database/abstract.repository.ts:14",{"_index":46,"title":{},"body":{"classes/AbstractRepository.html":{}}}],["libs/common/src/database/abstract.repository.ts:21",{"_index":54,"title":{},"body":{"classes/AbstractRepository.html":{}}}],["libs/common/src/database/abstract.repository.ts:34",{"_index":63,"title":{},"body":{"classes/AbstractRepository.html":{}}}],["libs/common/src/database/abstract.repository.ts:43",{"_index":69,"title":{},"body":{"classes/AbstractRepository.html":{}}}],["libs/common/src/database/abstract.repository.ts:55",{"_index":59,"title":{},"body":{"classes/AbstractRepository.html":{}}}],["libs/common/src/database/abstract.repository.ts:62",{"_index":70,"title":{},"body":{"classes/AbstractRepository.html":{}}}],["libs/common/src/database/abstract.schema.ts",{"_index":6,"title":{},"body":{"classes/AbstractDocument.html":{},"coverage.html":{}}}],["libs/common/src/database/abstract.schema.ts:7",{"_index":17,"title":{},"body":{"classes/AbstractDocument.html":{}}}],["libs/common/src/database/database.module.ts",{"_index":278,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["libs/common/src/rmq/rmq.module.ts",{"_index":450,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"coverage.html":{}}}],["libs/common/src/rmq/rmq.module.ts:14",{"_index":455,"title":{},"body":{"modules/RmqModule.html":{}}}],["libs/common/src/rmq/rmq.service.ts",{"_index":467,"title":{},"body":{"injectables/RmqService.html":{},"coverage.html":{}}}],["libs/common/src/rmq/rmq.service.ts:10",{"_index":472,"title":{},"body":{"injectables/RmqService.html":{}}}],["libs/common/src/rmq/rmq.service.ts:6",{"_index":469,"title":{},"body":{"injectables/RmqService.html":{}}}],["license",{"_index":687,"title":{},"body":{"properties.html":{}}}],["local",{"_index":362,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{},"index.html":{}}}],["localauthguard",{"_index":121,"title":{"classes/LocalAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"classes/LocalAuthGuard.html":{},"coverage.html":{}}}],["localstrategy",{"_index":154,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["logger",{"_index":34,"title":{},"body":{"classes/AbstractRepository.html":{},"injectables/BillingService.html":{},"injectables/OrdersRepository.html":{},"injectables/UsersRepository.html":{}}}],["logger(billingservice.name",{"_index":248,"title":{},"body":{"injectables/BillingService.html":{}}}],["logger(ordersrepository.name",{"_index":420,"title":{},"body":{"injectables/OrdersRepository.html":{}}}],["logger(usersrepository.name",{"_index":507,"title":{},"body":{"injectables/UsersRepository.html":{}}}],["login",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(user",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/TokenPayload.html":{}}}],["logout",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{}}}],["logout(response",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/TokenPayload.html":{}}}],["machine",{"_index":613,"title":{},"body":{"index.html":{}}}],["manager",{"_index":578,"title":{},"body":{"dependencies.html":{}}}],["mapped",{"_index":665,"title":{},"body":{"index.html":{}}}],["matching",{"_index":28,"title":{},"body":{"classes/AbstractDocument.html":{},"classes/AbstractRepository.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/BillingController.html":{},"modules/BillingModule.html":{},"injectables/BillingService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"guards/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersRepository.html":{},"injectables/OrdersService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"injectables/RmqService.html":{},"interfaces/TokenPayload.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["messagepattern",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{}}}],["messagepattern('validate_user",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{}}}],["metadata",{"_index":594,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":35,"title":{},"body":{"classes/AbstractRepository.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BillingController.html":{},"injectables/BillingService.html":{},"guards/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/OrdersController.html":{},"injectables/OrdersRepository.html":{},"injectables/OrdersService.html":{},"modules/RmqModule.html":{},"injectables/RmqService.html":{},"controllers/UsersController.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{}}}],["microservices",{"_index":602,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":597,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":44,"title":{},"body":{"classes/AbstractRepository.html":{},"injectables/OrdersRepository.html":{},"injectables/UsersRepository.html":{}}}],["modify",{"_index":625,"title":{},"body":{"index.html":{}}}],["module",{"_index":138,"title":{"modules/AuthModule.html":{},"modules/BillingModule.html":{},"modules/DatabaseModule.html":{},"modules/OrdersModule.html":{},"modules/RmqModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/BillingModule.html":{},"modules/DatabaseModule.html":{},"modules/OrdersModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":140,"title":{"modules.html":{}},"body":{"modules/AuthModule.html":{},"modules/BillingModule.html":{},"modules/DatabaseModule.html":{},"modules/OrdersModule.html":{},"modules/RmqModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["mongodb_uri",{"_index":178,"title":{},"body":{"modules/AuthModule.html":{},"modules/OrdersModule.html":{}}}],["mongoose",{"_index":24,"title":{},"body":{"classes/AbstractDocument.html":{},"classes/AbstractRepository.html":{},"injectables/JwtStrategy.html":{},"injectables/OrdersRepository.html":{},"injectables/UsersRepository.html":{},"dependencies.html":{}}}],["mongoosemodule",{"_index":279,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/OrdersModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeature",{"_index":407,"title":{},"body":{"modules/OrdersModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":280,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["mounts",{"_index":654,"title":{},"body":{"index.html":{}}}],["name",{"_index":48,"title":{},"body":{"classes/AbstractRepository.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BillingController.html":{},"injectables/BillingService.html":{},"classes/CreateOrderDto.html":{},"guards/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersRepository.html":{},"injectables/OrdersService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"injectables/RmqService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{}}}],["named",{"_index":655,"title":{},"body":{"index.html":{}}}],["nest.js",{"_index":603,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":72,"title":{},"body":{"classes/AbstractRepository.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/BillingController.html":{},"modules/BillingModule.html":{},"injectables/BillingService.html":{},"modules/DatabaseModule.html":{},"guards/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersRepository.html":{},"injectables/OrdersService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"injectables/RmqService.html":{},"interfaces/TokenPayload.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":162,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BillingModule.html":{},"modules/DatabaseModule.html":{},"injectables/JwtStrategy.html":{},"modules/OrdersModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"injectables/RmqService.html":{},"interfaces/TokenPayload.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":571,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":164,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/TokenPayload.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":573,"title":{},"body":{"dependencies.html":{}}}],["nestjs/microservices",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BillingController.html":{},"guards/JwtAuthGuard.html":{},"injectables/OrdersService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"injectables/RmqService.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":21,"title":{},"body":{"classes/AbstractDocument.html":{},"modules/DatabaseModule.html":{},"classes/Order.html":{},"modules/OrdersModule.html":{},"injectables/OrdersRepository.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersRepository.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":337,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":576,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":77,"title":{},"body":{"classes/AbstractRepository.html":{},"injectables/AuthService.html":{},"injectables/BillingService.html":{},"guards/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/OrdersRepository.html":{},"interfaces/TokenPayload.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["noack",{"_index":471,"title":{},"body":{"injectables/RmqService.html":{}}}],["notfoundexception",{"_index":71,"title":{},"body":{"classes/AbstractRepository.html":{}}}],["notfoundexception('document",{"_index":87,"title":{},"body":{"classes/AbstractRepository.html":{}}}],["number",{"_index":263,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/Order.html":{}}}],["observable",{"_index":300,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["omit",{"_index":51,"title":{},"body":{"classes/AbstractRepository.html":{},"injectables/OrdersRepository.html":{},"injectables/UsersRepository.html":{}}}],["once",{"_index":662,"title":{},"body":{"index.html":{}}}],["optional",{"_index":49,"title":{},"body":{"classes/AbstractRepository.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BillingController.html":{},"injectables/BillingService.html":{},"guards/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/OrdersController.html":{},"injectables/OrdersRepository.html":{},"injectables/OrdersService.html":{},"modules/RmqModule.html":{},"injectables/RmqService.html":{},"controllers/UsersController.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{}}}],["options",{"_index":52,"title":{},"body":{"classes/AbstractRepository.html":{},"injectables/OrdersRepository.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"injectables/RmqService.html":{},"injectables/UsersRepository.html":{}}}],["order",{"_index":253,"title":{"classes/Order.html":{}},"body":{"injectables/BillingService.html":{},"classes/Order.html":{},"modules/OrdersModule.html":{},"injectables/OrdersRepository.html":{},"injectables/OrdersService.html":{},"coverage.html":{}}}],["order.dto",{"_index":388,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["order.dto.ts",{"_index":256,"title":{},"body":{"classes/CreateOrderDto.html":{},"coverage.html":{}}}],["order.dto.ts:12",{"_index":262,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["order.dto.ts:6",{"_index":260,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["order.dto.ts:9",{"_index":265,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["order.name",{"_index":408,"title":{},"body":{"modules/OrdersModule.html":{}}}],["ordermodel",{"_index":413,"title":{},"body":{"injectables/OrdersRepository.html":{}}}],["orders",{"_index":377,"title":{},"body":{"controllers/OrdersController.html":{}}}],["orders.controller",{"_index":399,"title":{},"body":{"modules/OrdersModule.html":{}}}],["orders.repository",{"_index":400,"title":{},"body":{"modules/OrdersModule.html":{},"injectables/OrdersService.html":{}}}],["orders.service",{"_index":386,"title":{},"body":{"controllers/OrdersController.html":{},"modules/OrdersModule.html":{}}}],["orderschema",{"_index":373,"title":{},"body":{"classes/Order.html":{},"modules/OrdersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["orderscontroller",{"_index":375,"title":{"controllers/OrdersController.html":{}},"body":{"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"coverage.html":{}}}],["ordersmodule",{"_index":393,"title":{"modules/OrdersModule.html":{}},"body":{"modules/OrdersModule.html":{},"modules.html":{},"overview.html":{}}}],["ordersrepository",{"_index":397,"title":{"injectables/OrdersRepository.html":{}},"body":{"modules/OrdersModule.html":{},"injectables/OrdersRepository.html":{},"injectables/OrdersService.html":{},"coverage.html":{},"overview.html":{}}}],["ordersservice",{"_index":385,"title":{"injectables/OrdersService.html":{}},"body":{"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"coverage.html":{},"overview.html":{}}}],["out",{"_index":157,"title":{},"body":{"modules/AuthModule.html":{},"modules/BillingModule.html":{},"modules/OrdersModule.html":{},"modules/RmqModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":677,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":568,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["parameters",{"_index":47,"title":{},"body":{"classes/AbstractRepository.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BillingController.html":{},"injectables/BillingService.html":{},"guards/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/OrdersController.html":{},"injectables/OrdersRepository.html":{},"injectables/OrdersService.html":{},"modules/RmqModule.html":{},"injectables/RmqService.html":{},"controllers/UsersController.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{}}}],["parser",{"_index":587,"title":{},"body":{"dependencies.html":{}}}],["partial",{"_index":519,"title":{},"body":{"injectables/UsersService.html":{}}}],["passport",{"_index":340,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportstrategy",{"_index":336,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":330,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passthrough",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{}}}],["password",{"_index":274,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/LocalStrategy.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["passwordisvalid",{"_index":537,"title":{},"body":{"injectables/UsersService.html":{}}}],["payload",{"_index":229,"title":{},"body":{"controllers/BillingController.html":{}}}],["persistent",{"_index":476,"title":{},"body":{"injectables/RmqService.html":{},"index.html":{}}}],["phonenumber",{"_index":257,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/Order.html":{}}}],["pipe",{"_index":318,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["port",{"_index":404,"title":{},"body":{"modules/OrdersModule.html":{},"index.html":{}}}],["ports",{"_index":664,"title":{},"body":{"index.html":{}}}],["post",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrdersController.html":{},"controllers/UsersController.html":{}}}],["post('login",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{}}}],["post()@useguards(jwtauthguard",{"_index":381,"title":{},"body":{"controllers/OrdersController.html":{}}}],["prefix",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrdersController.html":{},"controllers/UsersController.html":{}}}],["prerequisites",{"_index":614,"title":{},"body":{"index.html":{}}}],["price",{"_index":258,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/Order.html":{}}}],["private",{"_index":74,"title":{},"body":{"classes/AbstractRepository.html":{},"injectables/AuthService.html":{},"injectables/BillingService.html":{},"guards/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/OrdersService.html":{},"injectables/RmqService.html":{},"interfaces/TokenPayload.html":{},"injectables/UsersService.html":{}}}],["project",{"_index":612,"title":{},"body":{"index.html":{}}}],["promise",{"_index":58,"title":{},"body":{"classes/AbstractRepository.html":{},"guards/JwtAuthGuard.html":{},"injectables/OrdersRepository.html":{},"injectables/UsersRepository.html":{}}}],["prop",{"_index":19,"title":{},"body":{"classes/AbstractDocument.html":{},"classes/Order.html":{},"classes/User.html":{}}}],["prop({type",{"_index":14,"title":{},"body":{"classes/AbstractDocument.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"classes/AbstractDocument.html":{},"classes/AbstractRepository.html":{},"injectables/BillingService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateUserDto.html":{},"classes/Order.html":{},"injectables/OrdersRepository.html":{},"interfaces/RmqModuleOptions.html":{},"interfaces/TokenPayload.html":{},"classes/User.html":{},"injectables/UsersRepository.html":{},"properties.html":{}}}],["protected",{"_index":31,"title":{},"body":{"classes/AbstractRepository.html":{},"injectables/OrdersRepository.html":{},"injectables/UsersRepository.html":{}}}],["providers",{"_index":145,"title":{},"body":{"modules/AuthModule.html":{},"modules/BillingModule.html":{},"modules/OrdersModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["query",{"_index":64,"title":{},"body":{"classes/AbstractRepository.html":{},"injectables/OrdersRepository.html":{},"injectables/UsersRepository.html":{}}}],["queryoptions",{"_index":68,"title":{},"body":{"classes/AbstractRepository.html":{},"injectables/OrdersRepository.html":{},"injectables/UsersRepository.html":{}}}],["queue",{"_index":464,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"injectables/RmqService.html":{}}}],["rabbit_mq_billing_queue",{"_index":240,"title":{},"body":{"modules/BillingModule.html":{}}}],["rabbit_mq_uri",{"_index":239,"title":{},"body":{"modules/BillingModule.html":{}}}],["rabbitmq",{"_index":605,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":33,"title":{},"body":{"classes/AbstractRepository.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BillingController.html":{},"injectables/BillingService.html":{},"guards/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/OrdersController.html":{},"injectables/OrdersRepository.html":{},"injectables/OrdersService.html":{},"injectables/RmqService.html":{},"interfaces/TokenPayload.html":{},"controllers/UsersController.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{}}}],["reflect",{"_index":593,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":452,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["register(undefined",{"_index":453,"title":{},"body":{"modules/RmqModule.html":{}}}],["req",{"_index":380,"title":{},"body":{"controllers/OrdersController.html":{}}}],["req.cookies?.authentication",{"_index":391,"title":{},"body":{"controllers/OrdersController.html":{}}}],["request",{"_index":346,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["request.email",{"_index":533,"title":{},"body":{"injectables/UsersService.html":{}}}],["request?.authentication",{"_index":347,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["res",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{}}}],["reset",{"_index":156,"title":{},"body":{"modules/AuthModule.html":{},"modules/BillingModule.html":{},"modules/OrdersModule.html":{},"modules/RmqModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["response",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/TokenPayload.html":{}}}],["response.cookie('authentication",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/TokenPayload.html":{}}}],["response.send(user",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{}}}],["results",{"_index":27,"title":{},"body":{"classes/AbstractDocument.html":{},"classes/AbstractRepository.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/BillingController.html":{},"modules/BillingModule.html":{},"injectables/BillingService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"guards/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersRepository.html":{},"injectables/OrdersService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"injectables/RmqService.html":{},"interfaces/TokenPayload.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":79,"title":{},"body":{"classes/AbstractRepository.html":{},"controllers/AuthController.html":{},"controllers/BillingController.html":{},"injectables/BillingService.html":{},"guards/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"injectables/RmqService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":57,"title":{},"body":{"classes/AbstractRepository.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BillingController.html":{},"injectables/BillingService.html":{},"guards/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/OrdersController.html":{},"injectables/OrdersRepository.html":{},"injectables/OrdersService.html":{},"modules/RmqModule.html":{},"injectables/RmqService.html":{},"controllers/UsersController.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{}}}],["rmq.service",{"_index":457,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["rmqcontext",{"_index":221,"title":{},"body":{"controllers/BillingController.html":{}}}],["rmqmodule",{"_index":151,"title":{"modules/RmqModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/BillingModule.html":{},"modules/OrdersModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"modules.html":{},"overview.html":{}}}],["rmqmodule.register",{"_index":409,"title":{},"body":{"modules/OrdersModule.html":{}}}],["rmqmoduleoptions",{"_index":454,"title":{"interfaces/RmqModuleOptions.html":{}},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"coverage.html":{}}}],["rmqoptions",{"_index":473,"title":{},"body":{"injectables/RmqService.html":{}}}],["rmqservice",{"_index":449,"title":{"injectables/RmqService.html":{}},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"injectables/RmqService.html":{},"coverage.html":{},"overview.html":{}}}],["root",{"_index":641,"title":{},"body":{"index.html":{}}}],["rpc",{"_index":322,"title":{},"body":{"guards/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["run",{"_index":639,"title":{},"body":{"index.html":{}}}],["running",{"_index":611,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":309,"title":{},"body":{"guards/JwtAuthGuard.html":{},"injectables/OrdersService.html":{},"dependencies.html":{}}}],["saveoptions",{"_index":53,"title":{},"body":{"classes/AbstractRepository.html":{},"injectables/OrdersRepository.html":{},"injectables/UsersRepository.html":{}}}],["schema",{"_index":20,"title":{},"body":{"classes/AbstractDocument.html":{},"classes/Order.html":{},"modules/OrdersModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{}}}],["schemafactory",{"_index":369,"title":{},"body":{"classes/Order.html":{},"classes/User.html":{}}}],["schemafactory.createforclass(order",{"_index":374,"title":{},"body":{"classes/Order.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(user",{"_index":481,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["schemas/order.schema",{"_index":401,"title":{},"body":{"modules/OrdersModule.html":{},"injectables/OrdersRepository.html":{}}}],["schemas/user.schema",{"_index":500,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{}}}],["schematypes",{"_index":22,"title":{},"body":{"classes/AbstractDocument.html":{}}}],["schematypes.objectid",{"_index":26,"title":{},"body":{"classes/AbstractDocument.html":{}}}],["secret",{"_index":183,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":348,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["services",{"_index":306,"title":{},"body":{"guards/JwtAuthGuard.html":{},"index.html":{}}}],["session",{"_index":91,"title":{},"body":{"classes/AbstractRepository.html":{},"injectables/OrdersService.html":{}}}],["session.aborttransaction",{"_index":442,"title":{},"body":{"injectables/OrdersService.html":{}}}],["session.committransaction",{"_index":440,"title":{},"body":{"injectables/OrdersService.html":{}}}],["session.endsession",{"_index":444,"title":{},"body":{"injectables/OrdersService.html":{}}}],["session.starttransaction",{"_index":93,"title":{},"body":{"classes/AbstractRepository.html":{}}}],["setting",{"_index":609,"title":{},"body":{"index.html":{}}}],["setup",{"_index":637,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":185,"title":{},"body":{"modules/AuthModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AbstractDocument.html":{},"classes/AbstractRepository.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/BillingController.html":{},"modules/BillingModule.html":{},"injectables/BillingService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"guards/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersRepository.html":{},"injectables/OrdersService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"injectables/RmqService.html":{},"interfaces/TokenPayload.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{}}}],["specific",{"_index":626,"title":{},"body":{"index.html":{}}}],["start",{"_index":620,"title":{},"body":{"index.html":{}}}],["started",{"_index":601,"title":{"index.html":{}},"body":{"index.html":{}}}],["starts",{"_index":658,"title":{},"body":{"index.html":{}}}],["starttransaction",{"_index":41,"title":{},"body":{"classes/AbstractRepository.html":{},"injectables/OrdersRepository.html":{},"injectables/UsersRepository.html":{}}}],["statements",{"_index":546,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":451,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["stop",{"_index":669,"title":{},"body":{"index.html":{}}}],["stopping",{"_index":668,"title":{},"body":{"index.html":{}}}],["strategies/jwt.strategy",{"_index":168,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategies/local.strategy",{"_index":169,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy",{"_index":339,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["string",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{},"controllers/BillingController.html":{},"injectables/BillingService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateUserDto.html":{},"injectables/LocalStrategy.html":{},"classes/Order.html":{},"injectables/OrdersService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"injectables/RmqService.html":{},"interfaces/TokenPayload.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["super",{"_index":343,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["super(ordermodel",{"_index":425,"title":{},"body":{"injectables/OrdersRepository.html":{}}}],["super(usermodel",{"_index":510,"title":{},"body":{"injectables/UsersRepository.html":{}}}],["support",{"_index":672,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":673,"title":{},"body":{"modules.html":{}}}],["table",{"_index":567,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":566,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":308,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["tap((res",{"_index":319,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["tdocument",{"_index":83,"title":{},"body":{"classes/AbstractRepository.html":{}}}],["this.adduser(res",{"_index":320,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["this.authclient.send('validate_user",{"_index":317,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["this.authservice.login(user",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.billingclient.emit('order_created",{"_index":439,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.billingservice.bill(data",{"_index":232,"title":{},"body":{"controllers/BillingController.html":{}}}],["this.billingservice.gethello",{"_index":230,"title":{},"body":{"controllers/BillingController.html":{}}}],["this.configservice.get('jwt_expiration",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/TokenPayload.html":{}}}],["this.configservice.get('rabbit_mq_uri",{"_index":474,"title":{},"body":{"injectables/RmqService.html":{}}}],["this.configservice.get(`rabbit_mq_${queue}_queue",{"_index":475,"title":{},"body":{"injectables/RmqService.html":{}}}],["this.connection.startsession",{"_index":92,"title":{},"body":{"classes/AbstractRepository.html":{}}}],["this.getauthentication(context",{"_index":314,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["this.jwtservice.sign(tokenpayload",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/TokenPayload.html":{}}}],["this.logger.log('billing",{"_index":252,"title":{},"body":{"injectables/BillingService.html":{}}}],["this.model",{"_index":78,"title":{},"body":{"classes/AbstractRepository.html":{}}}],["this.model.find",{"_index":90,"title":{},"body":{"classes/AbstractRepository.html":{}}}],["this.model.findone(query",{"_index":85,"title":{},"body":{"classes/AbstractRepository.html":{}}}],["this.model.findoneandupdate(query",{"_index":89,"title":{},"body":{"classes/AbstractRepository.html":{}}}],["this.ordersrepository.create(dto",{"_index":438,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.ordersrepository.find",{"_index":445,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.ordersrepository.starttransaction",{"_index":437,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.ordersservice.createorder(createorderdto",{"_index":390,"title":{},"body":{"controllers/OrdersController.html":{}}}],["this.ordersservice.getorders",{"_index":392,"title":{},"body":{"controllers/OrdersController.html":{}}}],["this.usersrepository.create",{"_index":529,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.findone",{"_index":532,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.findone(getuserargs",{"_index":542,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.createuser(dto",{"_index":493,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.getuser",{"_index":350,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.usersservice.validateuser(email",{"_index":364,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.validatecreateuserrequest(request",{"_index":528,"title":{},"body":{"injectables/UsersService.html":{}}}],["through",{"_index":608,"title":{},"body":{"index.html":{}}}],["throw",{"_index":86,"title":{},"body":{"classes/AbstractRepository.html":{},"guards/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/OrdersService.html":{},"injectables/UsersService.html":{}}}],["timestamps",{"_index":372,"title":{},"body":{"classes/Order.html":{}}}],["tojson",{"_index":82,"title":{},"body":{"classes/AbstractRepository.html":{}}}],["token",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/TokenPayload.html":{}}}],["tokenpayload",{"_index":201,"title":{"interfaces/TokenPayload.html":{}},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"interfaces/TokenPayload.html":{},"coverage.html":{}}}],["transformer",{"_index":583,"title":{},"body":{"dependencies.html":{}}}],["transport",{"_index":459,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"injectables/RmqService.html":{}}}],["transport.rmq",{"_index":461,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"injectables/RmqService.html":{}}}],["true",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BillingModule.html":{},"classes/Order.html":{},"modules/OrdersModule.html":{},"injectables/RmqService.html":{},"interfaces/TokenPayload.html":{}}}],["try",{"_index":349,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/OrdersService.html":{},"injectables/UsersService.html":{}}}],["type",{"_index":10,"title":{},"body":{"classes/AbstractDocument.html":{},"classes/AbstractRepository.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BillingController.html":{},"injectables/BillingService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateUserDto.html":{},"guards/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"injectables/OrdersRepository.html":{},"injectables/OrdersService.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"injectables/RmqService.html":{},"interfaces/TokenPayload.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":23,"title":{},"body":{"classes/AbstractDocument.html":{},"classes/AbstractRepository.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["types.objectid",{"_index":12,"title":{},"body":{"classes/AbstractDocument.html":{},"classes/AbstractRepository.html":{}}}],["types.objectid(userid",{"_index":351,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["unauthorizedexception",{"_index":304,"title":{},"body":{"guards/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["unauthorizedexception('credentials",{"_index":540,"title":{},"body":{"injectables/UsersService.html":{}}}],["unauthorizedexception('not",{"_index":315,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["undefined",{"_index":15,"title":{},"body":{"classes/AbstractDocument.html":{}}}],["unknown",{"_index":60,"title":{},"body":{"classes/AbstractRepository.html":{},"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/OrdersController.html":{},"injectables/OrdersRepository.html":{},"injectables/OrdersService.html":{},"controllers/UsersController.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["unlicensed",{"_index":688,"title":{},"body":{"properties.html":{}}}],["unprocessableentityexception",{"_index":526,"title":{},"body":{"injectables/UsersService.html":{}}}],["unprocessableentityexception('email",{"_index":534,"title":{},"body":{"injectables/UsersService.html":{}}}],["up",{"_index":610,"title":{},"body":{"index.html":{}}}],["update",{"_index":66,"title":{},"body":{"classes/AbstractRepository.html":{},"injectables/OrdersRepository.html":{},"injectables/UsersRepository.html":{}}}],["updatequery",{"_index":67,"title":{},"body":{"classes/AbstractRepository.html":{},"injectables/OrdersRepository.html":{},"injectables/UsersRepository.html":{}}}],["uri",{"_index":281,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["urls",{"_index":462,"title":{},"body":{"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{},"injectables/RmqService.html":{}}}],["usefactory",{"_index":182,"title":{},"body":{"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/RmqModule.html":{},"interfaces/RmqModuleOptions.html":{}}}],["useguards",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BillingController.html":{},"controllers/OrdersController.html":{}}}],["useguards(jwtauthguard",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BillingController.html":{},"controllers/OrdersController.html":{}}}],["useguards(jwtauthguard)@messagepattern('validate_user",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(localauthguard",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(localauthguard)@post('login",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{}}}],["user",{"_index":103,"title":{"classes/User.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/JwtAuthGuard.html":{},"interfaces/TokenPayload.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["user._id.tohexstring",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/TokenPayload.html":{}}}],["user.decorator",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.decorator.ts",{"_index":552,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.dto",{"_index":489,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":272,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:5",{"_index":276,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:9",{"_index":277,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.name",{"_index":502,"title":{},"body":{"modules/UsersModule.html":{}}}],["user.password",{"_index":539,"title":{},"body":{"injectables/UsersService.html":{}}}],["userid",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"interfaces/TokenPayload.html":{}}}],["usermodel",{"_index":506,"title":{},"body":{"injectables/UsersRepository.html":{}}}],["usernamefield",{"_index":363,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["users.controller",{"_index":499,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.repository",{"_index":501,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["users.service",{"_index":490,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/schemas/user.schema",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/TokenPayload.html":{}}}],["users/users.module",{"_index":170,"title":{},"body":{"modules/AuthModule.html":{}}}],["users/users.service",{"_index":342,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["userschema",{"_index":480,"title":{},"body":{"classes/User.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userscontroller",{"_index":482,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":152,"title":{"modules/UsersModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersrepository",{"_index":497,"title":{"injectables/UsersRepository.html":{}},"body":{"modules/UsersModule.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["usersservice",{"_index":332,"title":{"injectables/UsersService.html":{}},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["v",{"_index":645,"title":{},"body":{"index.html":{}}}],["valid",{"_index":541,"title":{},"body":{"injectables/UsersService.html":{}}}],["validate",{"_index":331,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(email",{"_index":360,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validate(undefined",{"_index":334,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validatecreateuserrequest",{"_index":513,"title":{},"body":{"injectables/UsersService.html":{}}}],["validatecreateuserrequest(request",{"_index":522,"title":{},"body":{"injectables/UsersService.html":{}}}],["validateuser",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{},"injectables/UsersService.html":{}}}],["validateuser(@currentuser",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{}}}],["validateuser(email",{"_index":524,"title":{},"body":{"injectables/UsersService.html":{}}}],["validateuser(user",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{}}}],["validationschema",{"_index":173,"title":{},"body":{"modules/AuthModule.html":{},"modules/BillingModule.html":{},"modules/OrdersModule.html":{}}}],["validator",{"_index":269,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateUserDto.html":{},"dependencies.html":{}}}],["value",{"_index":247,"title":{},"body":{"injectables/BillingService.html":{},"injectables/OrdersRepository.html":{},"injectables/RmqService.html":{},"injectables/UsersRepository.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":553,"title":{},"body":{"coverage.html":{}}}],["variable_name=your_value",{"_index":629,"title":{},"body":{"index.html":{}}}],["variables",{"_index":627,"title":{"miscellaneous/variables.html":{}},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":633,"title":{},"body":{"index.html":{},"properties.html":{}}}],["versionkey",{"_index":370,"title":{},"body":{"classes/Order.html":{},"classes/User.html":{}}}],["void",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{},"guards/JwtAuthGuard.html":{}}}],["volumes",{"_index":656,"title":{},"body":{"index.html":{}}}],["world",{"_index":251,"title":{},"body":{"injectables/BillingService.html":{}}}],["yes",{"_index":56,"title":{},"body":{"classes/AbstractRepository.html":{},"injectables/OrdersRepository.html":{},"injectables/UsersRepository.html":{}}}],["zoom",{"_index":155,"title":{},"body":{"modules/AuthModule.html":{},"modules/BillingModule.html":{},"modules/OrdersModule.html":{},"modules/RmqModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AbstractDocument.html":{"url":"classes/AbstractDocument.html","title":"class - AbstractDocument","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractDocument\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/database/abstract.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/common/src/database/abstract.schema.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema } from '@nestjs/mongoose';\nimport { SchemaTypes, Types } from 'mongoose';\n\n@Schema()\nexport class AbstractDocument {\n    @Prop({ type: SchemaTypes.ObjectId })\n    _id: Types.ObjectId;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractRepository.html":{"url":"classes/AbstractRepository.html","title":"class - AbstractRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/database/abstract.repository.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findOneAndUpdate\n                            \n                            \n                                    Async\n                                startTransaction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(model: Model, connection: Connection)\n                    \n                \n                        \n                            \n                                Defined in libs/common/src/database/abstract.repository.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        connection\n                                                  \n                                                        \n                                                                    Connection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                    \n                        \n                                Defined in libs/common/src/database/abstract.repository.ts:14\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(document: Omit, options?: SaveOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/database/abstract.repository.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                document\n                                            \n                                                        Omit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        SaveOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/database/abstract.repository.ts:55\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(query: FilterQuery)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/database/abstract.repository.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneAndUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneAndUpdate(query: FilterQuery, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/database/abstract.repository.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        startTransaction\n                        \n                    \n                \n            \n            \n                \n                        \n                    startTransaction()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/database/abstract.repository.ts:62\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Logger, NotFoundException } from '@nestjs/common';\nimport {\n    FilterQuery,\n    Model,\n    Types,\n    UpdateQuery,\n    SaveOptions,\n    Connection,\n    QueryOptions,\n} from 'mongoose';\nimport { AbstractDocument } from './abstract.schema';\n\nexport abstract class AbstractRepository {\n    protected abstract readonly logger: Logger;\n\n    constructor(\n        protected readonly model: Model,\n        private readonly connection: Connection,\n    ) { }\n\n    async create(\n        document: Omit,\n        options?: SaveOptions,\n    ): Promise {\n        const createdDocument = new this.model({\n            ...document,\n            _id: new Types.ObjectId(),\n        });\n        return (\n            await createdDocument.save(options)\n        ).toJSON() as unknown as TDocument;\n    }\n\n    async findOne(query: FilterQuery) {\n        const doc = await this.model.findOne(query);\n        if (!doc) {\n            throw new NotFoundException('Document not found');\n        }\n        return doc;\n    }\n\n\n    async findOneAndUpdate(\n        query: FilterQuery,\n        update: UpdateQuery,\n        options?: QueryOptions,\n    ) {\n        const doc = await this.model.findOneAndUpdate(query, update, options);\n        if (!doc) {\n            throw new NotFoundException('Document not found');\n        }\n        return doc;\n    }\n\n    async find() {\n        const doc = await this.model.find();\n        if (!doc) {\n            throw new NotFoundException('Document not found');\n        }\n        return doc;\n    }\n    async startTransaction() {\n        const session = await this.connection.startSession();\n        session.startTransaction();\n        return session;\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/auth/src/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                login\n                            \n                            \n                                    \n                                    \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(user: User, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(LocalAuthGuard)@Post('login')\n                \n            \n\n                    \n                        \n                            Defined in apps/auth/src/auth.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateUser(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@MessagePattern('validate_user')\n                \n            \n\n                    \n                        \n                            Defined in apps/auth/src/auth.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Res, UseGuards } from '@nestjs/common';\nimport { MessagePattern } from '@nestjs/microservices';\nimport { Response } from 'express';\nimport { AuthService } from './auth.service';\nimport JwtAuthGuard from './guards/jwt-auth.guard';\nimport { LocalAuthGuard } from './guards/local-auth.guard';\nimport { User } from './users/schemas/user.schema';\nimport { CurrentUser } from './current-user.decorator';\n\n@Controller('auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) { }\n\n  @UseGuards(LocalAuthGuard)\n  @Post('login')\n  async login(\n    @CurrentUser() user: User,\n    @Res({ passthrough: true }) response: Response,\n  ) {\n    await this.authService.login(user, response);\n    response.send(user);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @MessagePattern('validate_user')\n  async validateUser(@CurrentUser() user: User) {\n    return user;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nDatabaseModule->AuthModule\n\n\n\n\n\nRmqModule\n\nRmqModule\n\nAuthModule -->\n\nRmqModule->AuthModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/auth/src/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                        \n                            RmqModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { JwtModule } from '@nestjs/jwt';\nimport { RmqModule, DatabaseModule } from '@app/common';\nimport * as Joi from 'joi';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { JwtStrategy } from './strategies/jwt.strategy';\nimport { LocalStrategy } from './strategies/local.strategy';\nimport { UsersModule } from './users/users.module';\n\n@Module({\n  imports: [\n    DatabaseModule,\n    UsersModule,\n    RmqModule,\n    ConfigModule.forRoot({\n      isGlobal: true,\n      validationSchema: Joi.object({\n        JWT_SECRET: Joi.string().required(),\n        JWT_EXPIRATION: Joi.string().required(),\n        MONGODB_URI: Joi.string().required(),\n      }),\n      envFilePath: './apps/auth/.env',\n    }),\n    JwtModule.registerAsync({\n      useFactory: (configService: ConfigService) => ({\n        secret: configService.get('JWT_SECRET'),\n        signOptions: {\n          expiresIn: `${configService.get('JWT_EXPIRATION')}s`,\n        },\n      }),\n      inject: [ConfigService],\n    }),\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, LocalStrategy, JwtStrategy],\n})\nexport class AuthModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/auth/src/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in apps/auth/src/auth.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(user: User, response: Response)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/auth/src/auth.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout(response: Response)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/auth/src/auth.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { JwtService } from '@nestjs/jwt';\nimport { Response } from 'express';\nimport { User } from './users/schemas/user.schema';\n\nexport interface TokenPayload {\n  userId: string;\n}\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private readonly configService: ConfigService,\n    private readonly jwtService: JwtService,\n  ) { }\n\n  async login(user: User, response: Response) {\n    const tokenPayload: TokenPayload = {\n      userId: user._id.toHexString(),\n    };\n\n    const expires = new Date();\n    expires.setSeconds(\n      expires.getSeconds() + this.configService.get('JWT_EXPIRATION'),\n    );\n\n    const token = this.jwtService.sign(tokenPayload);\n\n    response.cookie('Authentication', token, {\n      httpOnly: true,\n      expires,\n    });\n  }\n\n  logout(response: Response) {\n    response.cookie('Authentication', '', {\n      httpOnly: true,\n      expires: new Date(),\n    });\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BillingController.html":{"url":"controllers/BillingController.html","title":"controller - BillingController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BillingController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/billing/src/billing.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                            \n                                    \n                                    \n                                    Async\n                                handleOrderCreated\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in apps/billing/src/billing.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        handleOrderCreated\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleOrderCreated(data: any, context: RmqContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @EventPattern('order_created')@UseGuards(JwtAuthGuard)\n                \n            \n\n                    \n                        \n                            Defined in apps/billing/src/billing.controller.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                        RmqContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, UseGuards } from '@nestjs/common';\nimport { BillingService } from './billing.service';\nimport { Ctx, EventPattern, Payload, RmqContext } from '@nestjs/microservices';\nimport { JwtAuthGuard } from '@app/common';\n\n@Controller()\nexport class BillingController {\n  constructor(private readonly billingService: BillingService) { }\n\n  @Get()\n  getHello(): string {\n    return this.billingService.getHello();\n  }\n\n  @EventPattern('order_created')\n  @UseGuards(JwtAuthGuard)\n  async handleOrderCreated(\n    @Payload() data: any, @Ctx() context: RmqContext\n  ) {\n    this.billingService.bill(data)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BillingModule.html":{"url":"modules/BillingModule.html","title":"module - BillingModule","body":"\n                   \n\n\n\n\n    Modules\n    BillingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BillingModule\n\n\n\ncluster_BillingModule_providers\n\n\n\ncluster_BillingModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nBillingModule\n\nBillingModule\n\nBillingModule -->\n\nAuthModule->BillingModule\n\n\n\n\n\nRmqModule\n\nRmqModule\n\nBillingModule -->\n\nRmqModule->BillingModule\n\n\n\n\n\nBillingService\n\nBillingService\n\nBillingModule -->\n\nBillingService->BillingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/billing/src/billing.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BillingService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            BillingController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            RmqModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { BillingController } from './billing.controller';\nimport { BillingService } from './billing.service';\nimport { AuthModule, RmqModule } from '@app/common';\nimport { ConfigModule } from '@nestjs/config';\nimport * as joi from 'joi'\n@Module({\n  imports: [\n    AuthModule,\n    RmqModule,\n    ConfigModule.forRoot({\n      isGlobal: true,\n      validationSchema: joi.object({\n        RABBIT_MQ_URI: joi.string().required(),\n        RABBIT_MQ_BILLING_QUEUE: joi.string().required()\n      })\n    })],\n  controllers: [BillingController],\n  providers: [BillingService],\n})\nexport class BillingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BillingService.html":{"url":"injectables/BillingService.html","title":"injectable - BillingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BillingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/billing/src/billing.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                bill\n                            \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        bill\n                        \n                    \n                \n            \n            \n                \n                        \n                    bill(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/billing/src/billing.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/billing/src/billing.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(BillingService.name)\n                    \n                \n                    \n                        \n                                Defined in apps/billing/src/billing.service.ts:5\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\n\n@Injectable()\nexport class BillingService {\n  private readonly logger = new Logger(BillingService.name);\n\n  getHello(): string {\n    return 'Hello World!';\n  }\n\n  async bill(data: any) {\n    this.logger.log('Billing order', data);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOrderDto.html":{"url":"classes/CreateOrderDto.html","title":"class - CreateOrderDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOrderDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/orders/src/dtos/create-order.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                phoneNumber\n                            \n                            \n                                    \n                                price\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/orders/src/dtos/create-order.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsPhoneNumber('TM')\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/orders/src/dtos/create-order.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsPositive()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/orders/src/dtos/create-order.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsPhoneNumber, IsPositive, IsString } from \"class-validator\";\n\nexport class CreateOrderDto {\n    @IsString()\n    @IsNotEmpty()\n    name: string;\n\n    @IsPositive()\n    price: number;\n\n    @IsPhoneNumber('TM')\n    phoneNumber: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/auth/src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/auth/src/users/dto/create-user.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/auth/src/users/dto/create-user.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsString } from 'class-validator';\n\nexport class CreateUserDto {\n    @IsEmail()\n    email: string;\n\n    @IsString()\n    @IsNotEmpty()\n    password: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/common/src/database/database.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { MongooseModule } from '@nestjs/mongoose';\n\n@Module({\n    imports: [\n        MongooseModule.forRootAsync({\n            useFactory: (configService: ConfigService) => ({\n                uri: configService.get('MONGODB_URI'),\n            }),\n            inject: [ConfigService],\n        }),\n    ],\n})\nexport class DatabaseModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/JwtAuthGuard.html":{"url":"guards/JwtAuthGuard.html","title":"guard - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                libs/common/src/auth/jwt-auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addUser\n                            \n                            \n                                canActivate\n                            \n                            \n                                    Private\n                                getAuthentication\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authClient: ClientProxy)\n                    \n                \n                        \n                            \n                                Defined in libs/common/src/auth/jwt-auth.guard.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authClient\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        addUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    addUser(user: any, context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/auth/jwt-auth.guard.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/auth/jwt-auth.guard.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     boolean | Promise | Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getAuthentication\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAuthentication(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/auth/jwt-auth.guard.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, ForbiddenException, Inject, Injectable, UnauthorizedException } from \"@nestjs/common\";\nimport { AUTH_SERVICE } from \"./services\";\nimport { ClientProxy } from \"@nestjs/microservices\";\nimport { catchError, Observable, tap } from \"rxjs\";\n65876204\n@Injectable()\nexport class JwtAuthGuard implements CanActivate {\n    constructor(\n        @Inject(AUTH_SERVICE) private readonly authClient: ClientProxy\n    ) { }\n\n    canActivate(context: ExecutionContext): boolean | Promise | Observable {\n        const authentication = this.getAuthentication(context)\n        if (!authentication) throw new UnauthorizedException('Not authenticated')\n        return this.authClient.send('validate_user', {\n            Authentication: authentication\n        }).pipe(\n            tap((res) => {\n                this.addUser(res, context)\n            }),\n            catchError(() => {\n                throw new UnauthorizedException('Not authenticated')\n            })\n        );\n    }\n\n    private addUser(user: any, context: ExecutionContext) {\n        if (context.getType() === 'rpc') {\n            context.switchToRpc().getData().user = user\n        } else if (context.getType() === 'http') {\n            context.switchToHttp().getRequest().user = user\n        }\n    }\n\n    private getAuthentication(context: ExecutionContext) {\n        if (context.getType() === 'rpc') {\n            return context.switchToRpc().getData().Authentication\n        } else if (context.getType() === 'http') {\n            return context.switchToHttp().getRequest().cookies?.Authentication\n        }\n    }\n}\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/auth/src/strategies/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in apps/auth/src/strategies/jwt.strategy.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(undefined: TokenPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/auth/src/strategies/jwt.strategy.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            TokenPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { Types } from 'mongoose';\nimport { UsersService } from '../users/users.service';\nimport { TokenPayload } from '../auth.service';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n    constructor(\n        configService: ConfigService,\n        private readonly usersService: UsersService,\n    ) {\n        super({\n            jwtFromRequest: ExtractJwt.fromExtractors([\n                (request: any) => {\n                    return request?.Authentication;\n                },\n            ]),\n            secretOrKey: configService.get('JWT_SECRET'),\n        });\n    }\n\n    async validate({ userId }: TokenPayload) {\n        try {\n            return await this.usersService.getUser({\n                _id: new Types.ObjectId(userId),\n            });\n        } catch (err) {\n            throw new UnauthorizedException();\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LocalAuthGuard.html":{"url":"classes/LocalAuthGuard.html","title":"class - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/auth/src/guards/local-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('local')\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AuthGuard } from '@nestjs/passport';\n\nexport class LocalAuthGuard extends AuthGuard('local') { }\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/auth/src/strategies/local.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in apps/auth/src/strategies/local.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/auth/src/strategies/local.strategy.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Strategy } from 'passport-local';\nimport { UsersService } from '../users/users.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n    constructor(private readonly usersService: UsersService) {\n        super({ usernameField: 'email' });\n    }\n\n    async validate(email: string, password: string) {\n        return this.usersService.validateUser(email, password);\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Order.html":{"url":"classes/Order.html","title":"class - Order","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Order\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/orders/src/schemas/order.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                phoneNumber\n                            \n                            \n                                    \n                                price\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/orders/src/schemas/order.schema.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/orders/src/schemas/order.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/orders/src/schemas/order.schema.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { AbstractDocument } from '@app/common';\n\n@Schema({ versionKey: false, timestamps: true })\nexport class Order extends AbstractDocument {\n    @Prop()\n    name: string\n\n    @Prop()\n    price: number\n\n    @Prop()\n    phoneNumber: string\n}\n\nexport const OrderSchema = SchemaFactory.createForClass(Order);\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrdersController.html":{"url":"controllers/OrdersController.html","title":"controller - OrdersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrdersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/orders/src/orders.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                orders\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                createOrder\n                            \n                            \n                                    \n                                    Async\n                                find\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        createOrder\n                        \n                    \n                \n            \n            \n                \n                        \n                    createOrder(createOrderDto: CreateOrderDto, req: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UseGuards(JwtAuthGuard)\n                \n            \n\n                    \n                        \n                            Defined in apps/orders/src/orders.controller.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createOrderDto\n                                            \n                                                            CreateOrderDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in apps/orders/src/orders.controller.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Post, Req, UseGuards } from '@nestjs/common';\nimport { OrdersService } from './orders.service';\nimport { CreateOrderDto } from './dtos/create-order.dto';\nimport { JwtAuthGuard } from '@app/common';\n\n@Controller('orders')\nexport class OrdersController {\n  constructor(private readonly ordersService: OrdersService) { }\n\n  @Post()\n  @UseGuards(JwtAuthGuard)\n  async createOrder(\n    @Body() createOrderDto: CreateOrderDto,\n    @Req() req: any\n  ) {\n    return this.ordersService.createOrder(createOrderDto, req.cookies?.Authentication);\n  }\n\n  @Get()\n  async find() {\n    return await this.ordersService.getOrders();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrdersModule.html":{"url":"modules/OrdersModule.html","title":"module - OrdersModule","body":"\n                   \n\n\n\n\n    Modules\n    OrdersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OrdersModule\n\n\n\ncluster_OrdersModule_providers\n\n\n\ncluster_OrdersModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nOrdersModule\n\nOrdersModule\n\nOrdersModule -->\n\nAuthModule->OrdersModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nOrdersModule -->\n\nDatabaseModule->OrdersModule\n\n\n\n\n\nRmqModule\n\nRmqModule\n\nOrdersModule -->\n\nRmqModule->OrdersModule\n\n\n\n\n\nOrdersRepository\n\nOrdersRepository\n\nOrdersModule -->\n\nOrdersRepository->OrdersModule\n\n\n\n\n\nOrdersService\n\nOrdersService\n\nOrdersModule -->\n\nOrdersService->OrdersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/orders/src/orders.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OrdersRepository\n                        \n                        \n                            OrdersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OrdersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            RmqModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { OrdersController } from './orders.controller';\nimport { OrdersService } from './orders.service';\nimport { ConfigModule } from '@nestjs/config';\nimport * as joi from 'joi';\nimport { AuthModule, DatabaseModule, RmqModule } from '@app/common';\nimport { OrdersRepository } from './orders.repository';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Order, OrderSchema } from './schemas/order.schema';\nimport { BILLING_SERVICE } from './constants/services';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      validationSchema: joi.object({\n        MONGODB_URI: joi.string().required(),\n        PORT: joi.number().required()\n      }),\n      envFilePath: './apps/orders/.env',\n    }),\n    DatabaseModule,\n    MongooseModule.forFeature([{ name: Order.name, schema: OrderSchema }]),\n    RmqModule.register({ name: BILLING_SERVICE }),\n    AuthModule\n  ],\n  controllers: [OrdersController],\n  providers: [OrdersService, OrdersRepository],\n})\nexport class OrdersModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrdersRepository.html":{"url":"injectables/OrdersRepository.html","title":"injectable - OrdersRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrdersRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/orders/src/orders.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findOneAndUpdate\n                            \n                            \n                                    Async\n                                startTransaction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(orderModel: Model, connection: Connection)\n                    \n                \n                        \n                            \n                                Defined in apps/orders/src/orders.repository.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        orderModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        connection\n                                                  \n                                                        \n                                                                    Connection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(document: Omit, options?: SaveOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractRepository:21\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                document\n                                            \n                                                        Omit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        SaveOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractRepository:55\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(query: FilterQuery)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractRepository:34\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneAndUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneAndUpdate(query: FilterQuery, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractRepository:43\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        startTransaction\n                        \n                    \n                \n            \n            \n                \n                        \n                    startTransaction()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractRepository:62\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(OrdersRepository.name)\n                    \n                \n                        \n                            \n                                Inherited from         AbstractRepository\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractRepository:9\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { AbstractRepository } from \"@app/common\";\nimport { Injectable, Logger } from \"@nestjs/common\";\nimport { Order } from \"./schemas/order.schema\";\nimport { InjectConnection, InjectModel } from \"@nestjs/mongoose\";\nimport { Connection, connection, Model } from \"mongoose\";\n\n@Injectable()\nexport class OrdersRepository extends AbstractRepository {\n    protected readonly logger = new Logger(OrdersRepository.name);\n\n    constructor(\n        @InjectModel(Order.name) orderModel: Model,\n        @InjectConnection() connection: Connection\n    ) {\n        super(orderModel, connection);\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrdersService.html":{"url":"injectables/OrdersService.html","title":"injectable - OrdersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrdersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/orders/src/orders.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createOrder\n                            \n                            \n                                    Async\n                                getOrders\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ordersRepository: OrdersRepository, billingClient: ClientProxy)\n                    \n                \n                        \n                            \n                                Defined in apps/orders/src/orders.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ordersRepository\n                                                  \n                                                        \n                                                                        OrdersRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        billingClient\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createOrder\n                        \n                    \n                \n            \n            \n                \n                        \n                    createOrder(dto: CreateOrderDto, authentication: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/orders/src/orders.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreateOrderDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                authentication\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getOrders\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOrders()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/orders/src/orders.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { OrdersRepository } from './orders.repository';\nimport { CreateOrderDto } from './dtos/create-order.dto';\nimport { BILLING_SERVICE } from './constants/services';\nimport { ClientProxy } from '@nestjs/microservices';\nimport { lastValueFrom } from 'rxjs';\n\n@Injectable()\nexport class OrdersService {\n  constructor(\n    private readonly ordersRepository: OrdersRepository,\n    @Inject(BILLING_SERVICE) private readonly billingClient: ClientProxy\n  ) { }\n\n  async createOrder(dto: CreateOrderDto, authentication: string) {\n    const session = await this.ordersRepository.startTransaction();\n    try {\n      const order = await this.ordersRepository.create(dto, { session })\n      await lastValueFrom(\n        this.billingClient.emit('order_created', {\n          order,\n          Authentication: authentication\n        })\n      )\n      await session.commitTransaction();\n    } catch (error) {\n      await session.abortTransaction();\n      throw error;\n    } finally {\n      await session.endSession();\n    }\n  }\n\n  async getOrders() {\n    return this.ordersRepository.find();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RmqModule.html":{"url":"modules/RmqModule.html","title":"module - RmqModule","body":"\n                   \n\n\n\n\n    Modules\n    RmqModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RmqModule\n\n\n\ncluster_RmqModule_exports\n\n\n\ncluster_RmqModule_providers\n\n\n\n\nRmqService \n\nRmqService \n\n\n\nRmqModule\n\nRmqModule\n\nRmqService  -->\n\nRmqModule->RmqService \n\n\n\n\n\nRmqService\n\nRmqService\n\nRmqModule -->\n\nRmqService->RmqModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/common/src/rmq/rmq.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RmqService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RmqService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(undefined: RmqModuleOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/rmq/rmq.module.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            RmqModuleOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DynamicModule, Module } from \"@nestjs/common\";\nimport { RmqService } from \"./rmq.service\";\nimport { ClientsModule, Transport } from \"@nestjs/microservices\";\nimport { ConfigService } from \"@nestjs/config\";\ninterface RmqModuleOptions {\n    name: string\n}\n\n@Module({\n    providers: [RmqService],\n    exports: [RmqService]\n})\nexport class RmqModule {\n    static register({ name }: RmqModuleOptions): DynamicModule {\n        return {\n            module: RmqModule,\n            imports: [\n                ClientsModule.registerAsync([\n                    {\n                        name,\n                        useFactory: (configService: ConfigService) => ({\n                            transport: Transport.RMQ,\n                            options: {\n                                urls: [configService.get('RABBIT_MQ_URI')!],\n                                queue: configService.get(`RABBIT_MQ_${name}_QUEUE`)!,\n                            }\n                        }),\n                        inject: [ConfigService]\n                    }\n                ])\n            ],\n            exports: [ClientsModule]\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RmqModuleOptions.html":{"url":"interfaces/RmqModuleOptions.html","title":"interface - RmqModuleOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RmqModuleOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/rmq/rmq.module.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DynamicModule, Module } from \"@nestjs/common\";\nimport { RmqService } from \"./rmq.service\";\nimport { ClientsModule, Transport } from \"@nestjs/microservices\";\nimport { ConfigService } from \"@nestjs/config\";\ninterface RmqModuleOptions {\n    name: string\n}\n\n@Module({\n    providers: [RmqService],\n    exports: [RmqService]\n})\nexport class RmqModule {\n    static register({ name }: RmqModuleOptions): DynamicModule {\n        return {\n            module: RmqModule,\n            imports: [\n                ClientsModule.registerAsync([\n                    {\n                        name,\n                        useFactory: (configService: ConfigService) => ({\n                            transport: Transport.RMQ,\n                            options: {\n                                urls: [configService.get('RABBIT_MQ_URI')!],\n                                queue: configService.get(`RABBIT_MQ_${name}_QUEUE`)!,\n                            }\n                        }),\n                        inject: [ConfigService]\n                    }\n                ])\n            ],\n            exports: [ClientsModule]\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RmqService.html":{"url":"injectables/RmqService.html","title":"injectable - RmqService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RmqService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/rmq/rmq.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in libs/common/src/rmq/rmq.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getOptions\n                        \n                    \n                \n            \n            \n                \ngetOptions(queue: string, noAck)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/rmq/rmq.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                queue\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                noAck\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     RmqOptions\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { RmqOptions, Transport } from \"@nestjs/microservices\";\n\n@Injectable()\nexport class RmqService {\n    constructor(\n        private readonly configService: ConfigService\n    ) { }\n    getOptions(queue: string, noAck = false): RmqOptions {\n        return {\n            transport: Transport.RMQ,\n            options: {\n                urls: [this.configService.get('RABBIT_MQ_URI')!],\n                queue: this.configService.get(`RABBIT_MQ_${queue}_QUEUE`)!,\n                noAck: noAck,\n                persistent: true\n            }\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TokenPayload.html":{"url":"interfaces/TokenPayload.html","title":"interface - TokenPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TokenPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/auth/src/auth.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { JwtService } from '@nestjs/jwt';\nimport { Response } from 'express';\nimport { User } from './users/schemas/user.schema';\n\nexport interface TokenPayload {\n  userId: string;\n}\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private readonly configService: ConfigService,\n    private readonly jwtService: JwtService,\n  ) { }\n\n  async login(user: User, response: Response) {\n    const tokenPayload: TokenPayload = {\n      userId: user._id.toHexString(),\n    };\n\n    const expires = new Date();\n    expires.setSeconds(\n      expires.getSeconds() + this.configService.get('JWT_EXPIRATION'),\n    );\n\n    const token = this.jwtService.sign(tokenPayload);\n\n    response.cookie('Authentication', token, {\n      httpOnly: true,\n      expires,\n    });\n  }\n\n  logout(response: Response) {\n    response.cookie('Authentication', '', {\n      httpOnly: true,\n      expires: new Date(),\n    });\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/auth/src/users/schemas/user.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/auth/src/users/schemas/user.schema.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/auth/src/users/schemas/user.schema.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { AbstractDocument } from '@app/common';\n\n@Schema({ versionKey: false })\nexport class User extends AbstractDocument {\n    @Prop()\n    email: string;\n\n    @Prop()\n    password: string;\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User);\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/auth/src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth/users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                createUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(dto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in apps/auth/src/users/users.controller.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post } from '@nestjs/common';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UsersService } from './users.service';\n\n@Controller('auth/users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) { }\n\n  @Post()\n  async createUser(@Body() dto: CreateUserDto) {\n    return this.usersService.createUser(dto);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersRepository\n\nUsersRepository\n\nUsersModule -->\n\nUsersRepository->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/auth/src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersRepository\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersController } from './users.controller';\nimport { UsersService } from './users.service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { User, UserSchema } from './schemas/user.schema';\nimport { UsersRepository } from './users.repository';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: User.name, schema: UserSchema }]),\n  ],\n  controllers: [UsersController],\n  providers: [UsersService, UsersRepository],\n  exports: [UsersService],\n})\nexport class UsersModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersRepository.html":{"url":"injectables/UsersRepository.html","title":"injectable - UsersRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/auth/src/users/users.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findOneAndUpdate\n                            \n                            \n                                    Async\n                                startTransaction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model, connection: Connection)\n                    \n                \n                        \n                            \n                                Defined in apps/auth/src/users/users.repository.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        connection\n                                                  \n                                                        \n                                                                    Connection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(document: Omit, options?: SaveOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractRepository:21\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                document\n                                            \n                                                        Omit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        SaveOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractRepository:55\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(query: FilterQuery)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractRepository:34\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneAndUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneAndUpdate(query: FilterQuery, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractRepository:43\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        startTransaction\n                        \n                    \n                \n            \n            \n                \n                        \n                    startTransaction()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractRepository:62\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(UsersRepository.name)\n                    \n                \n                        \n                            \n                                Inherited from         AbstractRepository\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractRepository:10\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { InjectConnection, InjectModel } from '@nestjs/mongoose';\nimport { Model, Connection } from 'mongoose';\nimport { AbstractRepository } from '@app/common';\nimport { User } from './schemas/user.schema';\n\n@Injectable()\nexport class UsersRepository extends AbstractRepository {\n    protected readonly logger = new Logger(UsersRepository.name);\n\n    constructor(\n        @InjectModel(User.name) userModel: Model,\n        @InjectConnection() connection: Connection,\n    ) {\n        super(userModel, connection);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/auth/src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                getUser\n                            \n                            \n                                    Private\n                                    Async\n                                validateCreateUserRequest\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: UsersRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/auth/src/users/users.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        UsersRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(request: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/auth/src/users/users.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUser(getUserArgs: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/auth/src/users/users.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                getUserArgs\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        validateCreateUserRequest\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateCreateUserRequest(request: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/auth/src/users/users.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateUser(email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/auth/src/users/users.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  UnauthorizedException,\n  UnprocessableEntityException,\n} from '@nestjs/common';\nimport * as bcrypt from 'bcrypt';\nimport { UsersRepository } from './users.repository';\nimport { User } from './schemas/user.schema';\nimport { CreateUserDto } from './dto/create-user.dto';\n\n@Injectable()\nexport class UsersService {\n  constructor(private readonly usersRepository: UsersRepository) { }\n\n  async createUser(request: CreateUserDto) {\n    await this.validateCreateUserRequest(request);\n    const user = await this.usersRepository.create({\n      ...request,\n      password: await bcrypt.hash(request.password, 10),\n    });\n    return user;\n  }\n\n  private async validateCreateUserRequest(request: CreateUserDto) {\n    let user: User;\n    try {\n      user = await this.usersRepository.findOne({\n        email: request.email,\n      });\n      if (user) {\n        throw new UnprocessableEntityException('Email already exists.');\n      }\n    } catch (err) { }\n\n  }\n\n  async validateUser(email: string, password: string) {\n    const user = await this.usersRepository.findOne({ email });\n    const passwordIsValid = await bcrypt.compare(password, user.password);\n    if (!passwordIsValid) {\n      throw new UnauthorizedException('Credentials are not valid.');\n    }\n    return user;\n  }\n\n  async getUser(getUserArgs: Partial) {\n    return this.usersRepository.findOne(getUserArgs);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                apps/auth/src/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/auth/src/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/auth/src/auth.service.ts\n            \n            interface\n            TokenPayload\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        apps/auth/src/current-user.decorator.ts\n            \n            variable\n            CurrentUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/auth/src/current-user.decorator.ts\n            \n            variable\n            getCurrentUserByContext\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/auth/src/guards/jwt-auth.guard.ts\n            \n            class\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/auth/src/guards/local-auth.guard.ts\n            \n            class\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/auth/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/auth/src/strategies/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/auth/src/strategies/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/auth/src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/auth/src/users/schemas/user.schema.ts\n            \n            class\n            User\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        apps/auth/src/users/schemas/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/auth/src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/auth/src/users/users.repository.ts\n            \n            injectable\n            UsersRepository\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/auth/src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/billing/src/billing.controller.ts\n            \n            controller\n            BillingController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/billing/src/billing.service.ts\n            \n            injectable\n            BillingService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        apps/billing/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/orders/src/constants/services.ts\n            \n            variable\n            BILLING_SERVICE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/orders/src/dtos/create-order.dto.ts\n            \n            class\n            CreateOrderDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        apps/orders/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/orders/src/orders.controller.ts\n            \n            controller\n            OrdersController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/orders/src/orders.repository.ts\n            \n            injectable\n            OrdersRepository\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/orders/src/orders.service.ts\n            \n            injectable\n            OrdersService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/orders/src/schemas/order.schema.ts\n            \n            class\n            Order\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        apps/orders/src/schemas/order.schema.ts\n            \n            variable\n            OrderSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common/src/auth/jwt-auth.guard.ts\n            \n            guard\n            JwtAuthGuard\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        libs/common/src/auth/services.ts\n            \n            variable\n            AUTH_SERVICE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common/src/database/abstract.repository.ts\n            \n            class\n            AbstractRepository\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                libs/common/src/database/abstract.schema.ts\n            \n            class\n            AbstractDocument\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/common/src/rmq/rmq.module.ts\n            \n            interface\n            RmqModuleOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/common/src/rmq/rmq.service.ts\n            \n            injectable\n            RmqService\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^11.0.1\n        \n            @nestjs/config : ^4.0.1\n        \n            @nestjs/core : ^11.0.1\n        \n            @nestjs/jwt : ^11.0.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/microservices : ^11.0.11\n        \n            @nestjs/mongoose : ^11.0.1\n        \n            @nestjs/passport : ^11.0.5\n        \n            @nestjs/platform-express : ^11.0.1\n        \n            amqp-connection-manager : ^4.1.14\n        \n            amqplib : ^0.10.5\n        \n            bcrypt : ^5.1.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            cookie-parser : ^1.4.7\n        \n            joi : ^17.13.3\n        \n            mongoose : ^8.12.1\n        \n            passport : ^0.7.0\n        \n            passport-jwt : ^4.0.1\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.2.2\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/auth/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/billing/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/orders/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nMicroservices with Nest.js and Docker (RabbitMQ)\nGetting Started\nThese instructions will guide you through setting up and running the project on your local machine.\nPrerequisites\n\nDocker\nDocker Compose\n\nEnvironment Configuration\n\nCreate .env files:\n\nStart by copying the .env.example file to create your own configuration files.\nExample: cp .env.example .env\nModify the .env files with your specific environment variables.\n\nExample :# Example .env file contents:\nVARIABLE_NAME=your_value\nANOTHER_VARIABLE=another_value\nImportant: Do not commit your .env files to version control. Add them to your .gitignore.\n\n\n\nDocker Setup\n\nBuild and run the Docker containers:\n\nFrom the root directory of the project, run the following command:\nExample :docker-compose up --build -V\nExplanation of flags:\n\n--build: Builds the Docker images if they don't exist or if there are changes in the Dockerfile.\n-V: Mounts named volumes. This flag is important for persistent data.\nup: Starts the services defined in your docker-compose.yml file.\n\n\n\n\nAccessing the application:\n\nOnce the containers are running, you can access the application through the ports defined in your docker-compose.yml file.\nFor example, if you mapped port 8080 in your docker-compose.yml, you can access the application at http://localhost:3002.\n\n\n\nStopping the Containers\nTo stop the Docker containers, run the following command:\nExample :docker-compose down -V\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BillingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrdersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RmqModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_BillingModule\n\n\n\ncluster_BillingModule_providers\n\n\n\ncluster_OrdersModule\n\n\n\ncluster_OrdersModule_providers\n\n\n\ncluster_RmqModule\n\n\n\ncluster_RmqModule_exports\n\n\n\ncluster_RmqModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nDatabaseModule->AuthModule\n\n\n\n\n\nOrdersModule\n\nOrdersModule\n\nOrdersModule -->\n\nDatabaseModule->OrdersModule\n\n\n\n\n\nRmqModule\n\nRmqModule\n\nAuthModule -->\n\nRmqModule->AuthModule\n\n\n\nAuthModule -->\n\nRmqModule->AuthModule\n\n\n\n\n\nBillingModule\n\nBillingModule\n\nBillingModule -->\n\nRmqModule->BillingModule\n\n\n\nOrdersModule -->\n\nRmqModule->OrdersModule\n\n\n\n\n\nRmqService \n\nRmqService \n\nRmqService  -->\n\nRmqModule->RmqService \n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nRmqModule \n\nRmqModule \n\nRmqModule  -->\n\nAuthModule->RmqModule \n\n\n\nBillingModule -->\n\nAuthModule->BillingModule\n\n\n\nOrdersModule -->\n\nAuthModule->OrdersModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nBillingService\n\nBillingService\n\nBillingModule -->\n\nBillingService->BillingModule\n\n\n\n\n\nOrdersRepository\n\nOrdersRepository\n\nOrdersModule -->\n\nOrdersRepository->OrdersModule\n\n\n\n\n\nOrdersService\n\nOrdersService\n\nOrdersModule -->\n\nOrdersService->OrdersModule\n\n\n\n\n\nRmqService\n\nRmqService\n\nRmqModule -->\n\nRmqService->RmqModule\n\n\n\n\n\nUsersRepository\n\nUsersRepository\n\nUsersModule -->\n\nUsersRepository->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    8 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AUTH_SERVICE   (libs/.../services.ts)\n                        \n                        \n                            BILLING_SERVICE   (apps/.../services.ts)\n                        \n                        \n                            CurrentUser   (apps/.../current-user.decorator.ts)\n                        \n                        \n                            getCurrentUserByContext   (apps/.../current-user.decorator.ts)\n                        \n                        \n                            OrderSchema   (apps/.../order.schema.ts)\n                        \n                        \n                            UserSchema   (apps/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/common/src/auth/services.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AUTH_SERVICE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AUTH'\n                    \n                \n\n\n        \n    \n\n    apps/orders/src/constants/services.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BILLING_SERVICE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'BILLING'\n                    \n                \n\n\n        \n    \n\n    apps/auth/src/current-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CurrentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n    (_data: unknown, context: ExecutionContext) =>\n        getCurrentUserByContext(context),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentUserByContext\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (context: ExecutionContext) => {\n    if (context.getType() === 'http') {\n        return context.switchToHttp().getRequest().user;\n    }\n    if (context.getType() === 'rpc') {\n        return context.switchToRpc().getData().user;\n    }\n}\n                    \n                \n\n\n        \n    \n\n    apps/orders/src/schemas/order.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        OrderSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Order)\n                    \n                \n\n\n        \n    \n\n    apps/auth/src/users/schemas/user.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(User)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
